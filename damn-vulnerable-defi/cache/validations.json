{
  "version": "3.4",
  "log": [
    {
      "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        }
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        }
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "542454423297692e8a08c311f4d5a27219acfee41daac46a57ef3dea14ccb308",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:191"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:191"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        }
      },
      "contracts/abi-smuggling/AuthorizedExecutor.sol:AuthorizedExecutor": {
        "src": "contracts/abi-smuggling/AuthorizedExecutor.sol:11",
        "inherit": [
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [
          "setPermissions(bytes32[])",
          "execute(address,bytes)",
          "getActionId(bytes4,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            },
            {
              "label": "initialized",
              "offset": 0,
              "slot": "1",
              "type": "t_bool",
              "contract": "AuthorizedExecutor",
              "src": "contracts/abi-smuggling/AuthorizedExecutor.sol:14"
            },
            {
              "label": "permissions",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_bytes32,t_bool)",
              "contract": "AuthorizedExecutor",
              "src": "contracts/abi-smuggling/AuthorizedExecutor.sol:17"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_bool)": {
              "label": "mapping(bytes32 => bool)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        }
      },
      "contracts/abi-smuggling/SelfAuthorizedVault.sol:SelfAuthorizedVault": {
        "src": "contracts/abi-smuggling/SelfAuthorizedVault.sol:12",
        "version": {
          "withMetadata": "2e1f4236192382614706f07381fca360bb47487c004dc4763f532a1aba9d49df",
          "withoutMetadata": "f2318384b2ecd5a7433f6f18332b585222a5b42bb54d6539c32a4814a0454eac",
          "linkedWithoutMetadata": "f2318384b2ecd5a7433f6f18332b585222a5b42bb54d6539c32a4814a0454eac"
        },
        "inherit": [
          "contracts/abi-smuggling/AuthorizedExecutor.sol:AuthorizedExecutor",
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard"
        ],
        "libraries": [
          "solady/src/utils/SafeTransferLib.sol:SafeTransferLib"
        ],
        "methods": [
          "withdraw(address,address,uint256)",
          "sweepFunds(address,address)",
          "getLastWithdrawalTimestamp()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "_lastWithdrawalTimestamp",
            "src": "contracts/abi-smuggling/SelfAuthorizedVault.sol:16"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            },
            {
              "label": "initialized",
              "offset": 0,
              "slot": "1",
              "type": "t_bool",
              "contract": "AuthorizedExecutor",
              "src": "contracts/abi-smuggling/AuthorizedExecutor.sol:14"
            },
            {
              "label": "permissions",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_bytes32,t_bool)",
              "contract": "AuthorizedExecutor",
              "src": "contracts/abi-smuggling/AuthorizedExecutor.sol:17"
            },
            {
              "label": "_lastWithdrawalTimestamp",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "SelfAuthorizedVault",
              "src": "contracts/abi-smuggling/SelfAuthorizedVault.sol:16"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_bool)": {
              "label": "mapping(bytes32 => bool)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        }
      },
      "contracts/abi-smuggling/poc.sol:ABI_POC": {
        "src": "contracts/abi-smuggling/poc.sol:6",
        "version": {
          "withMetadata": "df8056347166873231d35b1969c1b6ba25aac0322e7a45f5f615152190664283",
          "withoutMetadata": "7cb00b0bdca3e3f4936245ff89638a373c333c41f1dcd901712cd19d69644779",
          "linkedWithoutMetadata": "7cb00b0bdca3e3f4936245ff89638a373c333c41f1dcd901712cd19d69644779"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address,address)",
          "exploit()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ABI_POC",
            "src": "contracts/abi-smuggling/poc.sol:11"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "token",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(IERC20)117",
              "contract": "ABI_POC",
              "src": "contracts/abi-smuggling/poc.sol:7"
            },
            {
              "label": "target",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(SelfAuthorizedVault)707",
              "contract": "ABI_POC",
              "src": "contracts/abi-smuggling/poc.sol:8"
            },
            {
              "label": "rec",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "ABI_POC",
              "src": "contracts/abi-smuggling/poc.sol:9"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20)117": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_contract(SelfAuthorizedVault)707": {
              "label": "contract SelfAuthorizedVault",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        }
      },
      "solady/src/utils/SafeTransferLib.sol:SafeTransferLib": {
        "src": "solady/src/utils/SafeTransferLib.sol:8",
        "version": {
          "withMetadata": "2348c5465c7df2529a76d9ffac5c56ae6fbdf5ae32682535766b86662f817843",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        }
      }
    },
    {
      "@uniswap/v3-core/contracts/interfaces/IERC20Minimal.sol:IERC20Minimal": {
        "src": "@uniswap/v3-core/contracts/interfaces/IERC20Minimal.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        }
      },
      "@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol:IUniswapV3Pool": {
        "src": "@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol:15",
        "inherit": [
          "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol:IUniswapV3PoolEvents",
          "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol:IUniswapV3PoolOwnerActions",
          "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol:IUniswapV3PoolActions",
          "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol:IUniswapV3PoolDerivedState",
          "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol:IUniswapV3PoolState",
          "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol:IUniswapV3PoolImmutables"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        }
      },
      "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol:IUniswapV3PoolActions": {
        "src": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "initialize(uint160)",
          "mint(address,int24,int24,uint128,bytes)",
          "collect(address,int24,int24,uint128,uint128)",
          "burn(int24,int24,uint128)",
          "swap(address,bool,int256,uint160,bytes)",
          "flash(address,uint256,uint256,bytes)",
          "increaseObservationCardinalityNext(uint16)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        }
      },
      "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol:IUniswapV3PoolDerivedState": {
        "src": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "observe(uint32[])",
          "snapshotCumulativesInside(int24,int24)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        }
      },
      "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol:IUniswapV3PoolEvents": {
        "src": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        }
      },
      "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol:IUniswapV3PoolImmutables": {
        "src": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "factory()",
          "token0()",
          "token1()",
          "fee()",
          "tickSpacing()",
          "maxLiquidityPerTick()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        }
      },
      "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol:IUniswapV3PoolOwnerActions": {
        "src": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setFeeProtocol(uint8,uint8)",
          "collectProtocol(address,uint128,uint128)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        }
      },
      "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol:IUniswapV3PoolState": {
        "src": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "slot0()",
          "feeGrowthGlobal0X128()",
          "feeGrowthGlobal1X128()",
          "protocolFees()",
          "liquidity()",
          "ticks(int24)",
          "tickBitmap(int16)",
          "positions(bytes32)",
          "observations(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        }
      },
      "@uniswap/v3-core/contracts/libraries/FullMath.sol:FullMath": {
        "src": "@uniswap/v3-core/contracts/libraries/FullMath.sol:7",
        "version": {
          "withMetadata": "cf2c4d4d3bea0b2e9ef49240613f3cb48d73dcd714b95b447441facc9fa72621",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        }
      },
      "@uniswap/v3-core/contracts/libraries/TickMath.sol:TickMath": {
        "src": "@uniswap/v3-core/contracts/libraries/TickMath.sol:7",
        "version": {
          "withMetadata": "e2ce058f5eb0ffc8e9823618f74bd13009d16afb69f48051ee868452d0b1b42b",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        }
      },
      "@uniswap/v3-periphery/contracts/libraries/OracleLibrary.sol:OracleLibrary": {
        "src": "@uniswap/v3-periphery/contracts/libraries/OracleLibrary.sol:10",
        "version": {
          "withMetadata": "92e5c62062317d7d72978a4409d80341a03e453f3f748a17498ab2afb57a9093",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [
          "@uniswap/v3-core/contracts/libraries/TickMath.sol:TickMath",
          "@uniswap/v3-core/contracts/libraries/FullMath.sol:FullMath"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        }
      },
      "contracts/puppet-v3/poc.sol:IPuppetV3Pool": {
        "src": "contracts/puppet-v3/poc.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "borrow(uint256)",
          "calculateDepositOfWETHRequired(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        }
      },
      "contracts/puppet-v3/poc.sol:IUniswapV3SwapCallback": {
        "src": "contracts/puppet-v3/poc.sol:19",
        "inherit": [],
        "libraries": [],
        "methods": [
          "uniswapV3SwapCallback(int256,int256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        }
      },
      "contracts/puppet-v3/poc.sol:Puppetv3_POC": {
        "src": "contracts/puppet-v3/poc.sol:36",
        "version": {
          "withMetadata": "b8d1800b8f981782e217df9bb2943417aa7c28e1d8a9910b3e4bdac11876ea88",
          "withoutMetadata": "cd311e1f4a3c61d544718390c184a08aa5bb0290adac0ecbe0eb0ae916365377",
          "linkedWithoutMetadata": "cd311e1f4a3c61d544718390c184a08aa5bb0290adac0ecbe0eb0ae916365377"
        },
        "inherit": [
          "contracts/puppet-v3/poc.sol:IUniswapV3SwapCallback"
        ],
        "libraries": [
          "@uniswap/v3-core/contracts/libraries/TickMath.sol:TickMath"
        ],
        "methods": [
          "(address,address,address,address)",
          "callSwap(int256)",
          "uniswapV3SwapCallback(int256,int256,bytes)",
          "transferWeth()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Puppetv3_POC",
            "src": "contracts/puppet-v3/poc.sol:43"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "token",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(IERC20Minimal)71",
              "contract": "Puppetv3_POC",
              "src": "contracts/puppet-v3/poc.sol:37"
            },
            {
              "label": "v3pool",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IUniswapV3Pool)93",
              "contract": "Puppetv3_POC",
              "src": "contracts/puppet-v3/poc.sol:38"
            },
            {
              "label": "lendingPool",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IPuppetV3Pool)1829",
              "contract": "Puppetv3_POC",
              "src": "contracts/puppet-v3/poc.sol:39"
            },
            {
              "label": "weth",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(IERC20Minimal)71",
              "contract": "Puppetv3_POC",
              "src": "contracts/puppet-v3/poc.sol:40"
            },
            {
              "label": "tickCumulatives",
              "offset": 0,
              "slot": "4",
              "type": "t_array(t_int56)dyn_storage",
              "contract": "Puppetv3_POC",
              "src": "contracts/puppet-v3/poc.sol:41"
            }
          ],
          "types": {
            "t_array(t_int56)dyn_storage": {
              "label": "int56[]",
              "numberOfBytes": "32"
            },
            "t_contract(IERC20Minimal)71": {
              "label": "contract IERC20Minimal",
              "numberOfBytes": "20"
            },
            "t_contract(IPuppetV3Pool)1829": {
              "label": "contract IPuppetV3Pool",
              "numberOfBytes": "20"
            },
            "t_contract(IUniswapV3Pool)93": {
              "label": "contract IUniswapV3Pool",
              "numberOfBytes": "20"
            },
            "t_int56": {
              "label": "int56",
              "numberOfBytes": "7"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        }
      }
    },
    {
      "@uniswap/v3-core/contracts/interfaces/IERC20Minimal.sol:IERC20Minimal": {
        "src": "@uniswap/v3-core/contracts/interfaces/IERC20Minimal.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        }
      },
      "@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol:IUniswapV3Pool": {
        "src": "@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol:15",
        "inherit": [
          "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol:IUniswapV3PoolEvents",
          "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol:IUniswapV3PoolOwnerActions",
          "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol:IUniswapV3PoolActions",
          "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol:IUniswapV3PoolDerivedState",
          "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol:IUniswapV3PoolState",
          "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol:IUniswapV3PoolImmutables"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        }
      },
      "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol:IUniswapV3PoolActions": {
        "src": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "initialize(uint160)",
          "mint(address,int24,int24,uint128,bytes)",
          "collect(address,int24,int24,uint128,uint128)",
          "burn(int24,int24,uint128)",
          "swap(address,bool,int256,uint160,bytes)",
          "flash(address,uint256,uint256,bytes)",
          "increaseObservationCardinalityNext(uint16)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        }
      },
      "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol:IUniswapV3PoolDerivedState": {
        "src": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "observe(uint32[])",
          "snapshotCumulativesInside(int24,int24)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        }
      },
      "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol:IUniswapV3PoolEvents": {
        "src": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        }
      },
      "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol:IUniswapV3PoolImmutables": {
        "src": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "factory()",
          "token0()",
          "token1()",
          "fee()",
          "tickSpacing()",
          "maxLiquidityPerTick()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        }
      },
      "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol:IUniswapV3PoolOwnerActions": {
        "src": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setFeeProtocol(uint8,uint8)",
          "collectProtocol(address,uint128,uint128)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        }
      },
      "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol:IUniswapV3PoolState": {
        "src": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "slot0()",
          "feeGrowthGlobal0X128()",
          "feeGrowthGlobal1X128()",
          "protocolFees()",
          "liquidity()",
          "ticks(int24)",
          "tickBitmap(int16)",
          "positions(bytes32)",
          "observations(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        }
      },
      "@uniswap/v3-core/contracts/libraries/FullMath.sol:FullMath": {
        "src": "@uniswap/v3-core/contracts/libraries/FullMath.sol:7",
        "version": {
          "withMetadata": "cf2c4d4d3bea0b2e9ef49240613f3cb48d73dcd714b95b447441facc9fa72621",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        }
      },
      "@uniswap/v3-core/contracts/libraries/TickMath.sol:TickMath": {
        "src": "@uniswap/v3-core/contracts/libraries/TickMath.sol:7",
        "version": {
          "withMetadata": "e2ce058f5eb0ffc8e9823618f74bd13009d16afb69f48051ee868452d0b1b42b",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        }
      },
      "@uniswap/v3-periphery/contracts/libraries/OracleLibrary.sol:OracleLibrary": {
        "src": "@uniswap/v3-periphery/contracts/libraries/OracleLibrary.sol:10",
        "version": {
          "withMetadata": "92e5c62062317d7d72978a4409d80341a03e453f3f748a17498ab2afb57a9093",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [
          "@uniswap/v3-core/contracts/libraries/TickMath.sol:TickMath",
          "@uniswap/v3-core/contracts/libraries/FullMath.sol:FullMath"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        }
      },
      "contracts/puppet-v3/poc.sol:IPuppetV3Pool": {
        "src": "contracts/puppet-v3/poc.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "borrow(uint256)",
          "calculateDepositOfWETHRequired(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        }
      },
      "contracts/puppet-v3/poc.sol:IUniswapV3SwapCallback": {
        "src": "contracts/puppet-v3/poc.sol:19",
        "inherit": [],
        "libraries": [],
        "methods": [
          "uniswapV3SwapCallback(int256,int256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        }
      },
      "contracts/puppet-v3/poc.sol:Puppetv3_POC": {
        "src": "contracts/puppet-v3/poc.sol:36",
        "version": {
          "withMetadata": "1dc3e9caccfdde0123e3d969f8541ab31117cea64382c8b41fedba148b9171db",
          "withoutMetadata": "4e5babe79694a4b0622140f2b9a03d18d2f99630b1877d06f80642f1ed3054df",
          "linkedWithoutMetadata": "4e5babe79694a4b0622140f2b9a03d18d2f99630b1877d06f80642f1ed3054df"
        },
        "inherit": [
          "contracts/puppet-v3/poc.sol:IUniswapV3SwapCallback"
        ],
        "libraries": [
          "@uniswap/v3-core/contracts/libraries/TickMath.sol:TickMath"
        ],
        "methods": [
          "(address,address,address,address)",
          "callSwap(int256)",
          "uniswapV3SwapCallback(int256,int256,bytes)",
          "getQuoteFromPool(uint256)",
          "observePool(uint32[])",
          "transferWeth()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Puppetv3_POC",
            "src": "contracts/puppet-v3/poc.sol:43"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "token",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(IERC20Minimal)71",
              "contract": "Puppetv3_POC",
              "src": "contracts/puppet-v3/poc.sol:37"
            },
            {
              "label": "v3pool",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IUniswapV3Pool)93",
              "contract": "Puppetv3_POC",
              "src": "contracts/puppet-v3/poc.sol:38"
            },
            {
              "label": "lendingPool",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IPuppetV3Pool)1829",
              "contract": "Puppetv3_POC",
              "src": "contracts/puppet-v3/poc.sol:39"
            },
            {
              "label": "weth",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(IERC20Minimal)71",
              "contract": "Puppetv3_POC",
              "src": "contracts/puppet-v3/poc.sol:40"
            },
            {
              "label": "tickCumulatives",
              "offset": 0,
              "slot": "4",
              "type": "t_array(t_int56)dyn_storage",
              "contract": "Puppetv3_POC",
              "src": "contracts/puppet-v3/poc.sol:41"
            }
          ],
          "types": {
            "t_array(t_int56)dyn_storage": {
              "label": "int56[]",
              "numberOfBytes": "32"
            },
            "t_contract(IERC20Minimal)71": {
              "label": "contract IERC20Minimal",
              "numberOfBytes": "20"
            },
            "t_contract(IPuppetV3Pool)1829": {
              "label": "contract IPuppetV3Pool",
              "numberOfBytes": "20"
            },
            "t_contract(IUniswapV3Pool)93": {
              "label": "contract IUniswapV3Pool",
              "numberOfBytes": "20"
            },
            "t_int56": {
              "label": "int56",
              "numberOfBytes": "7"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        }
      }
    },
    {
      "@uniswap/v3-core/contracts/interfaces/IERC20Minimal.sol:IERC20Minimal": {
        "src": "@uniswap/v3-core/contracts/interfaces/IERC20Minimal.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        }
      },
      "@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol:IUniswapV3Pool": {
        "src": "@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol:15",
        "inherit": [
          "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol:IUniswapV3PoolEvents",
          "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol:IUniswapV3PoolOwnerActions",
          "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol:IUniswapV3PoolActions",
          "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol:IUniswapV3PoolDerivedState",
          "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol:IUniswapV3PoolState",
          "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol:IUniswapV3PoolImmutables"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        }
      },
      "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol:IUniswapV3PoolActions": {
        "src": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "initialize(uint160)",
          "mint(address,int24,int24,uint128,bytes)",
          "collect(address,int24,int24,uint128,uint128)",
          "burn(int24,int24,uint128)",
          "swap(address,bool,int256,uint160,bytes)",
          "flash(address,uint256,uint256,bytes)",
          "increaseObservationCardinalityNext(uint16)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        }
      },
      "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol:IUniswapV3PoolDerivedState": {
        "src": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "observe(uint32[])",
          "snapshotCumulativesInside(int24,int24)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        }
      },
      "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol:IUniswapV3PoolEvents": {
        "src": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        }
      },
      "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol:IUniswapV3PoolImmutables": {
        "src": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "factory()",
          "token0()",
          "token1()",
          "fee()",
          "tickSpacing()",
          "maxLiquidityPerTick()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        }
      },
      "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol:IUniswapV3PoolOwnerActions": {
        "src": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setFeeProtocol(uint8,uint8)",
          "collectProtocol(address,uint128,uint128)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        }
      },
      "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol:IUniswapV3PoolState": {
        "src": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "slot0()",
          "feeGrowthGlobal0X128()",
          "feeGrowthGlobal1X128()",
          "protocolFees()",
          "liquidity()",
          "ticks(int24)",
          "tickBitmap(int16)",
          "positions(bytes32)",
          "observations(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        }
      },
      "@uniswap/v3-core/contracts/libraries/FullMath.sol:FullMath": {
        "src": "@uniswap/v3-core/contracts/libraries/FullMath.sol:7",
        "version": {
          "withMetadata": "cf2c4d4d3bea0b2e9ef49240613f3cb48d73dcd714b95b447441facc9fa72621",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        }
      },
      "@uniswap/v3-core/contracts/libraries/TickMath.sol:TickMath": {
        "src": "@uniswap/v3-core/contracts/libraries/TickMath.sol:7",
        "version": {
          "withMetadata": "e2ce058f5eb0ffc8e9823618f74bd13009d16afb69f48051ee868452d0b1b42b",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        }
      },
      "@uniswap/v3-periphery/contracts/libraries/OracleLibrary.sol:OracleLibrary": {
        "src": "@uniswap/v3-periphery/contracts/libraries/OracleLibrary.sol:10",
        "version": {
          "withMetadata": "92e5c62062317d7d72978a4409d80341a03e453f3f748a17498ab2afb57a9093",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [
          "@uniswap/v3-core/contracts/libraries/TickMath.sol:TickMath",
          "@uniswap/v3-core/contracts/libraries/FullMath.sol:FullMath"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        }
      },
      "contracts/puppet-v3/poc.sol:IPuppetV3Pool": {
        "src": "contracts/puppet-v3/poc.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "borrow(uint256)",
          "calculateDepositOfWETHRequired(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        }
      },
      "contracts/puppet-v3/poc.sol:IUniswapV3SwapCallback": {
        "src": "contracts/puppet-v3/poc.sol:19",
        "inherit": [],
        "libraries": [],
        "methods": [
          "uniswapV3SwapCallback(int256,int256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        }
      },
      "contracts/puppet-v3/poc.sol:PV3Attacker": {
        "src": "contracts/puppet-v3/poc.sol:36",
        "version": {
          "withMetadata": "2b071d4ec679d9de1d14ebf87679e1d55cbe5e0306621b524e3042670e336ecd",
          "withoutMetadata": "4e5babe79694a4b0622140f2b9a03d18d2f99630b1877d06f80642f1ed3054df",
          "linkedWithoutMetadata": "4e5babe79694a4b0622140f2b9a03d18d2f99630b1877d06f80642f1ed3054df"
        },
        "inherit": [
          "contracts/puppet-v3/poc.sol:IUniswapV3SwapCallback"
        ],
        "libraries": [
          "@uniswap/v3-core/contracts/libraries/TickMath.sol:TickMath"
        ],
        "methods": [
          "(address,address,address,address)",
          "callSwap(int256)",
          "uniswapV3SwapCallback(int256,int256,bytes)",
          "getQuoteFromPool(uint256)",
          "observePool(uint32[])",
          "transferWeth()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PV3Attacker",
            "src": "contracts/puppet-v3/poc.sol:43"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "token",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(IERC20Minimal)71",
              "contract": "PV3Attacker",
              "src": "contracts/puppet-v3/poc.sol:37"
            },
            {
              "label": "v3pool",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IUniswapV3Pool)93",
              "contract": "PV3Attacker",
              "src": "contracts/puppet-v3/poc.sol:38"
            },
            {
              "label": "lendingPool",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IPuppetV3Pool)1829",
              "contract": "PV3Attacker",
              "src": "contracts/puppet-v3/poc.sol:39"
            },
            {
              "label": "weth",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(IERC20Minimal)71",
              "contract": "PV3Attacker",
              "src": "contracts/puppet-v3/poc.sol:40"
            },
            {
              "label": "tickCumulatives",
              "offset": 0,
              "slot": "4",
              "type": "t_array(t_int56)dyn_storage",
              "contract": "PV3Attacker",
              "src": "contracts/puppet-v3/poc.sol:41"
            }
          ],
          "types": {
            "t_array(t_int56)dyn_storage": {
              "label": "int56[]",
              "numberOfBytes": "32"
            },
            "t_contract(IERC20Minimal)71": {
              "label": "contract IERC20Minimal",
              "numberOfBytes": "20"
            },
            "t_contract(IPuppetV3Pool)1829": {
              "label": "contract IPuppetV3Pool",
              "numberOfBytes": "20"
            },
            "t_contract(IUniswapV3Pool)93": {
              "label": "contract IUniswapV3Pool",
              "numberOfBytes": "20"
            },
            "t_int56": {
              "label": "int56",
              "numberOfBytes": "7"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        }
      }
    },
    {
      "@gnosis.pm/safe-contracts/contracts/GnosisSafe.sol:GnosisSafe": {
        "src": "@gnosis.pm/safe-contracts/contracts/GnosisSafe.sol:19",
        "version": {
          "withMetadata": "cfc55ce51b27a66b87c7f0da5787a31c35abf40e90b578b989670cabf8c02e23",
          "withoutMetadata": "9eea8ecbb6587451bd0fc9431d0e7cf1ac52fcfd98b030223e4528b46ea0dd96",
          "linkedWithoutMetadata": "9eea8ecbb6587451bd0fc9431d0e7cf1ac52fcfd98b030223e4528b46ea0dd96"
        },
        "inherit": [
          "@gnosis.pm/safe-contracts/contracts/base/GuardManager.sol:GuardManager",
          "@gnosis.pm/safe-contracts/contracts/common/StorageAccessible.sol:StorageAccessible",
          "@gnosis.pm/safe-contracts/contracts/base/FallbackManager.sol:FallbackManager",
          "@gnosis.pm/safe-contracts/contracts/interfaces/ISignatureValidator.sol:ISignatureValidatorConstants",
          "@gnosis.pm/safe-contracts/contracts/common/SecuredTokenTransfer.sol:SecuredTokenTransfer",
          "@gnosis.pm/safe-contracts/contracts/common/SignatureDecoder.sol:SignatureDecoder",
          "@gnosis.pm/safe-contracts/contracts/base/OwnerManager.sol:OwnerManager",
          "@gnosis.pm/safe-contracts/contracts/base/ModuleManager.sol:ModuleManager",
          "@gnosis.pm/safe-contracts/contracts/base/Executor.sol:Executor",
          "@gnosis.pm/safe-contracts/contracts/common/SelfAuthorized.sol:SelfAuthorized",
          "@gnosis.pm/safe-contracts/contracts/common/Singleton.sol:Singleton",
          "@gnosis.pm/safe-contracts/contracts/common/EtherPaymentFallback.sol:EtherPaymentFallback"
        ],
        "libraries": [
          "@gnosis.pm/safe-contracts/contracts/external/GnosisSafeMath.sol:GnosisSafeMath"
        ],
        "methods": [
          "()",
          "setup(address[],uint256,address,bytes,address,address,uint256,address payable)",
          "execTransaction(address,uint256,bytes,uint8,uint256,uint256,uint256,address,address payable,bytes)",
          "checkSignatures(bytes32,bytes,bytes)",
          "checkNSignatures(bytes32,bytes,bytes,uint256)",
          "requiredTxGas(address,uint256,bytes,uint8)",
          "approveHash(bytes32)",
          "getChainId()",
          "domainSeparator()",
          "encodeTransactionData(address,uint256,bytes,uint8,uint256,uint256,uint256,address,address,uint256)",
          "getTransactionHash(address,uint256,bytes,uint8,uint256,uint256,uint256,address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "GnosisSafe",
            "src": "@gnosis.pm/safe-contracts/contracts/GnosisSafe.sol:59"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "singleton",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Singleton",
              "src": "@gnosis.pm/safe-contracts/contracts/common/Singleton.sol:10"
            },
            {
              "label": "modules",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_address)",
              "contract": "ModuleManager",
              "src": "@gnosis.pm/safe-contracts/contracts/base/ModuleManager.sol:18"
            },
            {
              "label": "owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_address)",
              "contract": "OwnerManager",
              "src": "@gnosis.pm/safe-contracts/contracts/base/OwnerManager.sol:15"
            },
            {
              "label": "ownerCount",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "OwnerManager",
              "src": "@gnosis.pm/safe-contracts/contracts/base/OwnerManager.sol:16"
            },
            {
              "label": "threshold",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "OwnerManager",
              "src": "@gnosis.pm/safe-contracts/contracts/base/OwnerManager.sol:17"
            },
            {
              "label": "nonce",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "GnosisSafe",
              "src": "@gnosis.pm/safe-contracts/contracts/GnosisSafe.sol:51"
            },
            {
              "label": "_deprecatedDomainSeparator",
              "offset": 0,
              "slot": "6",
              "type": "t_bytes32",
              "contract": "GnosisSafe",
              "src": "@gnosis.pm/safe-contracts/contracts/GnosisSafe.sol:52"
            },
            {
              "label": "signedMessages",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_bytes32,t_uint256)",
              "contract": "GnosisSafe",
              "src": "@gnosis.pm/safe-contracts/contracts/GnosisSafe.sol:54"
            },
            {
              "label": "approvedHashes",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_mapping(t_bytes32,t_uint256))",
              "contract": "GnosisSafe",
              "src": "@gnosis.pm/safe-contracts/contracts/GnosisSafe.sol:56"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_bytes32,t_uint256))": {
              "label": "mapping(address => mapping(bytes32 => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        }
      },
      "@gnosis.pm/safe-contracts/contracts/base/Executor.sol:Executor": {
        "src": "@gnosis.pm/safe-contracts/contracts/base/Executor.sol:7",
        "version": {
          "withMetadata": "1123bd35224680e2c32ba89c35e13183ecf6d43ff64f93b69ad6124882ab1475",
          "withoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b",
          "linkedWithoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        }
      },
      "@gnosis.pm/safe-contracts/contracts/base/FallbackManager.sol:FallbackManager": {
        "src": "@gnosis.pm/safe-contracts/contracts/base/FallbackManager.sol:8",
        "version": {
          "withMetadata": "30c255bdaa2a976b50f871a75376c0f75bc9026ab2750f3b47a9dec94ff2806f",
          "withoutMetadata": "3ac5655136666b142f425391f53843c36a3603a86aa4c6aeb1c7fb8a1de177ba",
          "linkedWithoutMetadata": "3ac5655136666b142f425391f53843c36a3603a86aa4c6aeb1c7fb8a1de177ba"
        },
        "inherit": [
          "@gnosis.pm/safe-contracts/contracts/common/SelfAuthorized.sol:SelfAuthorized"
        ],
        "libraries": [],
        "methods": [
          "setFallbackHandler(address)",
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        }
      },
      "@gnosis.pm/safe-contracts/contracts/base/GuardManager.sol:Guard": {
        "src": "@gnosis.pm/safe-contracts/contracts/base/GuardManager.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "checkTransaction(address,uint256,bytes,uint8,uint256,uint256,uint256,address,address payable,bytes,address)",
          "checkAfterExecution(bytes32,bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        }
      },
      "@gnosis.pm/safe-contracts/contracts/base/GuardManager.sol:GuardManager": {
        "src": "@gnosis.pm/safe-contracts/contracts/base/GuardManager.sol:27",
        "version": {
          "withMetadata": "7c3f153bbc8bd88876e5506aac86c2d91f7b7f908d7b2705e76da787c460ffff",
          "withoutMetadata": "fc7ef81238283a2d1cc2e126f8bbaf431d4dca91dbbf475d58340386770ecbc4",
          "linkedWithoutMetadata": "fc7ef81238283a2d1cc2e126f8bbaf431d4dca91dbbf475d58340386770ecbc4"
        },
        "inherit": [
          "@gnosis.pm/safe-contracts/contracts/common/SelfAuthorized.sol:SelfAuthorized"
        ],
        "libraries": [],
        "methods": [
          "setGuard(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        }
      },
      "@gnosis.pm/safe-contracts/contracts/base/ModuleManager.sol:ModuleManager": {
        "src": "@gnosis.pm/safe-contracts/contracts/base/ModuleManager.sol:10",
        "version": {
          "withMetadata": "49bb258682294002be5a9675956a7d3ba70d1557e8715ccc1a292d05b0fe1e96",
          "withoutMetadata": "da3402829f09dcf600da2153f8080ddabd64ccd8a036dd5a19599fd71c13eaec",
          "linkedWithoutMetadata": "da3402829f09dcf600da2153f8080ddabd64ccd8a036dd5a19599fd71c13eaec"
        },
        "inherit": [
          "@gnosis.pm/safe-contracts/contracts/base/Executor.sol:Executor",
          "@gnosis.pm/safe-contracts/contracts/common/SelfAuthorized.sol:SelfAuthorized"
        ],
        "libraries": [],
        "methods": [
          "enableModule(address)",
          "disableModule(address,address)",
          "execTransactionFromModule(address,uint256,bytes,uint8)",
          "execTransactionFromModuleReturnData(address,uint256,bytes,uint8)",
          "isModuleEnabled(address)",
          "getModulesPaginated(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "modules",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_address)",
              "contract": "ModuleManager",
              "src": "@gnosis.pm/safe-contracts/contracts/base/ModuleManager.sol:18"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        }
      },
      "@gnosis.pm/safe-contracts/contracts/base/OwnerManager.sol:OwnerManager": {
        "src": "@gnosis.pm/safe-contracts/contracts/base/OwnerManager.sol:8",
        "version": {
          "withMetadata": "d58f0ef96cf70ceb6ca018b9e6db6d54f094e6d8cd2aa3f99a23c793aac00cc8",
          "withoutMetadata": "cb7759f9f859a8a6d470ef997bb276bd95f084b2a02ee46df34574e8990f3b61",
          "linkedWithoutMetadata": "cb7759f9f859a8a6d470ef997bb276bd95f084b2a02ee46df34574e8990f3b61"
        },
        "inherit": [
          "@gnosis.pm/safe-contracts/contracts/common/SelfAuthorized.sol:SelfAuthorized"
        ],
        "libraries": [],
        "methods": [
          "addOwnerWithThreshold(address,uint256)",
          "removeOwner(address,address,uint256)",
          "swapOwner(address,address,address)",
          "changeThreshold(uint256)",
          "getThreshold()",
          "isOwner(address)",
          "getOwners()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "owners",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_address)",
              "contract": "OwnerManager",
              "src": "@gnosis.pm/safe-contracts/contracts/base/OwnerManager.sol:15"
            },
            {
              "label": "ownerCount",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "OwnerManager",
              "src": "@gnosis.pm/safe-contracts/contracts/base/OwnerManager.sol:16"
            },
            {
              "label": "threshold",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "OwnerManager",
              "src": "@gnosis.pm/safe-contracts/contracts/base/OwnerManager.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        }
      },
      "@gnosis.pm/safe-contracts/contracts/common/Enum.sol:Enum": {
        "src": "@gnosis.pm/safe-contracts/contracts/common/Enum.sol:6",
        "version": {
          "withMetadata": "f494b134a56e2f98648350dded7d7f9e63ff92b2420189f3b4df6a0fcf807b9c",
          "withoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b",
          "linkedWithoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        }
      },
      "@gnosis.pm/safe-contracts/contracts/common/EtherPaymentFallback.sol:EtherPaymentFallback": {
        "src": "@gnosis.pm/safe-contracts/contracts/common/EtherPaymentFallback.sol:6",
        "version": {
          "withMetadata": "f77b47e11c244dbea953b3f0af40242f595fc65efbf918a3ba2552c4db35d7f2",
          "withoutMetadata": "aa9f6ca005d60a39d6bbf035dd936b9d9b8fca26233fee462c90b41cf3a4eeeb",
          "linkedWithoutMetadata": "aa9f6ca005d60a39d6bbf035dd936b9d9b8fca26233fee462c90b41cf3a4eeeb"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        }
      },
      "@gnosis.pm/safe-contracts/contracts/common/SecuredTokenTransfer.sol:SecuredTokenTransfer": {
        "src": "@gnosis.pm/safe-contracts/contracts/common/SecuredTokenTransfer.sol:6",
        "version": {
          "withMetadata": "a62cef5c0d2965ccb2586973868dd54f6c4b51a16cdeaa0697b01aa3a1d368d8",
          "withoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b",
          "linkedWithoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        }
      },
      "@gnosis.pm/safe-contracts/contracts/common/SelfAuthorized.sol:SelfAuthorized": {
        "src": "@gnosis.pm/safe-contracts/contracts/common/SelfAuthorized.sol:6",
        "version": {
          "withMetadata": "4049cdc67f91f3b1f2a06418b36774a486644c40fb9b9f8cace712bde431441b",
          "withoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b",
          "linkedWithoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        }
      },
      "@gnosis.pm/safe-contracts/contracts/common/SignatureDecoder.sol:SignatureDecoder": {
        "src": "@gnosis.pm/safe-contracts/contracts/common/SignatureDecoder.sol:6",
        "version": {
          "withMetadata": "1b816bf9c0f2c0fa6f8ad29fa730f0cac60000d77cba696db6f7ed78f0a5fce4",
          "withoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b",
          "linkedWithoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        }
      },
      "@gnosis.pm/safe-contracts/contracts/common/Singleton.sol:Singleton": {
        "src": "@gnosis.pm/safe-contracts/contracts/common/Singleton.sol:7",
        "version": {
          "withMetadata": "b6f1a3b0b3f5a42fde470b7a0d40337a2b6d308f0804c0fe9744f3807a6af3cb",
          "withoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b",
          "linkedWithoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "singleton",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Singleton",
              "src": "@gnosis.pm/safe-contracts/contracts/common/Singleton.sol:10"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        }
      },
      "@gnosis.pm/safe-contracts/contracts/common/StorageAccessible.sol:StorageAccessible": {
        "src": "@gnosis.pm/safe-contracts/contracts/common/StorageAccessible.sol:6",
        "version": {
          "withMetadata": "f6d97a0ed0e695461ae1f35cbf78bae9ec142c05acac03ba5e6315fffbec048e",
          "withoutMetadata": "475cc06389df6fff164fc2399d0b2efa267e8e5ffb3c15ff30825d10e9f5f791",
          "linkedWithoutMetadata": "475cc06389df6fff164fc2399d0b2efa267e8e5ffb3c15ff30825d10e9f5f791"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "getStorageAt(uint256,uint256)",
          "simulateAndRevert(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        }
      },
      "@gnosis.pm/safe-contracts/contracts/external/GnosisSafeMath.sol:GnosisSafeMath": {
        "src": "@gnosis.pm/safe-contracts/contracts/external/GnosisSafeMath.sol:10",
        "version": {
          "withMetadata": "003629153ddecc38f91225a421a909dd954dd25ceffbf5100176a9177e3ff65d",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        }
      },
      "@gnosis.pm/safe-contracts/contracts/interfaces/ISignatureValidator.sol:ISignatureValidator": {
        "src": "@gnosis.pm/safe-contracts/contracts/interfaces/ISignatureValidator.sol:9",
        "inherit": [
          "@gnosis.pm/safe-contracts/contracts/interfaces/ISignatureValidator.sol:ISignatureValidatorConstants"
        ],
        "libraries": [],
        "methods": [
          "isValidSignature(bytes,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        }
      },
      "@gnosis.pm/safe-contracts/contracts/interfaces/ISignatureValidator.sol:ISignatureValidatorConstants": {
        "src": "@gnosis.pm/safe-contracts/contracts/interfaces/ISignatureValidator.sol:4",
        "version": {
          "withMetadata": "1ee6b8496a02c5ee1488f3d081515c679212a2604cd42dfb45236011275d2e80",
          "withoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b",
          "linkedWithoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        }
      },
      "@gnosis.pm/safe-contracts/contracts/proxies/GnosisSafeProxy.sol:GnosisSafeProxy": {
        "src": "@gnosis.pm/safe-contracts/contracts/proxies/GnosisSafeProxy.sol:13",
        "version": {
          "withMetadata": "ceee13c3ef642412c57bdf5682b2b096665e7978fb36a17c6d6fcd617cf77f10",
          "withoutMetadata": "bd64e1ae69adb745796d30e323e9e6b42c7fc9ca418c8897db4f8d44970361af",
          "linkedWithoutMetadata": "bd64e1ae69adb745796d30e323e9e6b42c7fc9ca418c8897db4f8d44970361af"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "GnosisSafeProxy",
            "src": "@gnosis.pm/safe-contracts/contracts/proxies/GnosisSafeProxy.sol:20"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "singleton",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "GnosisSafeProxy",
              "src": "@gnosis.pm/safe-contracts/contracts/proxies/GnosisSafeProxy.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        }
      },
      "@gnosis.pm/safe-contracts/contracts/proxies/GnosisSafeProxy.sol:IProxy": {
        "src": "@gnosis.pm/safe-contracts/contracts/proxies/GnosisSafeProxy.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "masterCopy()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        }
      },
      "@gnosis.pm/safe-contracts/contracts/proxies/GnosisSafeProxyFactory.sol:GnosisSafeProxyFactory": {
        "src": "@gnosis.pm/safe-contracts/contracts/proxies/GnosisSafeProxyFactory.sol:9",
        "version": {
          "withMetadata": "294f0b467ad2203cdb2058787259c641795106cbc64370b8c274a6e0d0a27de0",
          "withoutMetadata": "b09f353c740e7ec3f9c66b0b5e4c067b7b9004eae144d8bbabc872f0f494ad83",
          "linkedWithoutMetadata": "b09f353c740e7ec3f9c66b0b5e4c067b7b9004eae144d8bbabc872f0f494ad83"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "createProxy(address,bytes)",
          "proxyRuntimeCode()",
          "proxyCreationCode()",
          "createProxyWithNonce(address,bytes,uint256)",
          "createProxyWithCallback(address,bytes,uint256,address)",
          "calculateCreateProxyWithNonceAddress(address,bytes,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        }
      },
      "@gnosis.pm/safe-contracts/contracts/proxies/IProxyCreationCallback.sol:IProxyCreationCallback": {
        "src": "@gnosis.pm/safe-contracts/contracts/proxies/IProxyCreationCallback.sol:5",
        "inherit": [],
        "libraries": [],
        "methods": [
          "proxyCreated(address,address,bytes,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        }
      },
      "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        }
      },
      "@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol:IERC1822ProxiableUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "proxiableUUID()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        }
      },
      "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:ERC1967UpgradeUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:20",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol:StorageSlotUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        }
      },
      "@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol:IBeaconUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/beacon/IBeaconUpgradeable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "implementation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        }
      },
      "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:57",
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        }
      },
      "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:22",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:ERC1967UpgradeUpgradeable",
          "@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol:IERC1822ProxiableUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "proxiableUUID()",
          "upgradeTo(address)",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        }
      },
      "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:AddressUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol:9",
        "version": {
          "withMetadata": "a7501a82ca3537d09f53cb97c8cd1a495ad13f58bdf7bba0cd4018b0f07c719d",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        }
      },
      "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:17",
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        }
      },
      "@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol:StorageSlotUpgradeable": {
        "src": "@openzeppelin/contracts-upgradeable/utils/StorageSlotUpgradeable.sol:32",
        "version": {
          "withMetadata": "59b6dc9630efde0604c6fe8a808b8b015877ca50b3272c3db0cbc1347c77268f",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        }
      },
      "@openzeppelin/contracts/access/AccessControl.sol:AccessControl": {
        "src": "@openzeppelin/contracts/access/AccessControl.sol:49",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/Strings.sol:Strings"
        ],
        "methods": [
          "supportsInterface(bytes4)",
          "hasRole(bytes32,address)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_roles",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)3749_storage)",
              "contract": "AccessControl",
              "src": "@openzeppelin/contracts/access/AccessControl.sol:55"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)3749_storage)": {
              "label": "mapping(bytes32 => struct AccessControl.RoleData)",
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)3749_storage": {
              "label": "struct AccessControl.RoleData",
              "members": [
                {
                  "label": "members",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        }
      },
      "@openzeppelin/contracts/access/AccessControlEnumerable.sol:AccessControlEnumerable": {
        "src": "@openzeppelin/contracts/access/AccessControlEnumerable.sol:13",
        "inherit": [
          "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/access/IAccessControlEnumerable.sol:IAccessControlEnumerable",
          "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/structs/EnumerableSet.sol:EnumerableSet"
        ],
        "methods": [
          "supportsInterface(bytes4)",
          "getRoleMember(bytes32,uint256)",
          "getRoleMemberCount(bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_roles",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)3749_storage)",
              "contract": "AccessControl",
              "src": "@openzeppelin/contracts/access/AccessControl.sol:55"
            },
            {
              "label": "_roleMembers",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_bytes32,t_struct(AddressSet)8003_storage)",
              "contract": "AccessControlEnumerable",
              "src": "@openzeppelin/contracts/access/AccessControlEnumerable.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(AddressSet)8003_storage)": {
              "label": "mapping(bytes32 => struct EnumerableSet.AddressSet)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)3749_storage)": {
              "label": "mapping(bytes32 => struct AccessControl.RoleData)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)8003_storage": {
              "label": "struct EnumerableSet.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)7702_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(RoleData)3749_storage": {
              "label": "struct AccessControl.RoleData",
              "members": [
                {
                  "label": "members",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)7702_storage": {
              "label": "struct EnumerableSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        }
      },
      "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl": {
        "src": "@openzeppelin/contracts/access/IAccessControl.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "hasRole(bytes32,address)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        }
      },
      "@openzeppelin/contracts/access/IAccessControlEnumerable.sol:IAccessControlEnumerable": {
        "src": "@openzeppelin/contracts/access/IAccessControlEnumerable.sol:11",
        "inherit": [
          "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl"
        ],
        "libraries": [],
        "methods": [
          "getRoleMember(bytes32,uint256)",
          "getRoleMemberCount(bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        }
      },
      "@openzeppelin/contracts/interfaces/IERC3156FlashBorrower.sol:IERC3156FlashBorrower": {
        "src": "@openzeppelin/contracts/interfaces/IERC3156FlashBorrower.sol:12",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onFlashLoan(address,address,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        }
      },
      "@openzeppelin/contracts/interfaces/IERC3156FlashLender.sol:IERC3156FlashLender": {
        "src": "@openzeppelin/contracts/interfaces/IERC3156FlashLender.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "maxFlashLoan(address)",
          "flashFee(address,uint256)",
          "flashLoan(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        }
      },
      "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        }
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "8501914750195508a8a26c7f2d22e68622cacc1574ad4bea1d125e6bda28249b",
          "withoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0",
          "linkedWithoutMetadata": "b4540fe9f7e31edaff0d12456d61a9a0f7cf1d32e18e2cd7387df7f6481f4dc0"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        }
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        }
      },
      "@openzeppelin/contracts/token/ERC20/extensions/ERC20Snapshot.sol:ERC20Snapshot": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Snapshot.sol:42",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/Arrays.sol:Arrays",
          "@openzeppelin/contracts/utils/Counters.sol:Counters"
        ],
        "methods": [
          "balanceOfAt(address,uint256)",
          "totalSupplyAt(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "label": "_accountBalanceSnapshots",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_struct(Snapshots)5061_storage)",
              "contract": "ERC20Snapshot",
              "src": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Snapshot.sol:56"
            },
            {
              "label": "_totalSupplySnapshots",
              "offset": 0,
              "slot": "6",
              "type": "t_struct(Snapshots)5061_storage",
              "contract": "ERC20Snapshot",
              "src": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Snapshot.sol:57"
            },
            {
              "label": "_currentSnapshotId",
              "offset": 0,
              "slot": "8",
              "type": "t_struct(Counter)6857_storage",
              "contract": "ERC20Snapshot",
              "src": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Snapshot.sol:60"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Snapshots)5061_storage)": {
              "label": "mapping(address => struct ERC20Snapshot.Snapshots)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Counter)6857_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Snapshots)5061_storage": {
              "label": "struct ERC20Snapshot.Snapshots",
              "members": [
                {
                  "label": "ids",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "values",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        }
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        }
      },
      "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:19",
        "version": {
          "withMetadata": "9f023b903b41630670b0fa6fd541ca4980908980eb5b26a8c51f04f3dc6079df",
          "withoutMetadata": "ec2b03b26bc843bec40bcade1595cd999bb83fb78eb039972e923f40d6b460be",
          "linkedWithoutMetadata": "ec2b03b26bc843bec40bcade1595cd999bb83fb78eb039972e923f40d6b460be"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:IERC721Metadata",
          "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/Address.sol:Address",
          "@openzeppelin/contracts/utils/Strings.sol:Strings"
        ],
        "methods": [
          "(string,string)",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721",
            "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:39"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        }
      },
      "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721.sol:11",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        }
      },
      "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol:IERC721Receiver": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        }
      },
      "@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol:ERC721Burnable": {
        "src": "@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol:13",
        "inherit": [
          "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
          "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:IERC721Metadata",
          "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "burn(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:39"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        }
      },
      "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:IERC721Metadata": {
        "src": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:12",
        "inherit": [
          "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        }
      },
      "@openzeppelin/contracts/utils/Address.sol:Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "542454423297692e8a08c311f4d5a27219acfee41daac46a57ef3dea14ccb308",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:191"
          },
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:191"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        }
      },
      "@openzeppelin/contracts/utils/Arrays.sol:Arrays": {
        "src": "@openzeppelin/contracts/utils/Arrays.sol:11",
        "version": {
          "withMetadata": "3f09f6c1863e8a38cdaff7f30ea1dd178ea3eb8ec8cf674fd6b01801ae193d84",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [
          "@openzeppelin/contracts/utils/math/Math.sol:Math"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        }
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        }
      },
      "@openzeppelin/contracts/utils/Counters.sol:Counters": {
        "src": "@openzeppelin/contracts/utils/Counters.sol:14",
        "version": {
          "withMetadata": "02037dd09eb3da1e868da61f9ed9316b25291b1c328862f2d845828c5f0ac970",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        }
      },
      "@openzeppelin/contracts/utils/Strings.sol:Strings": {
        "src": "@openzeppelin/contracts/utils/Strings.sol:9",
        "version": {
          "withMetadata": "fd40d8ea8bea82af2079c30c856c0d79b1737610b260b0b90b633ac1d5931b22",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        }
      },
      "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/ERC165.sol:22",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        }
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        }
      },
      "@openzeppelin/contracts/utils/math/Math.sol:Math": {
        "src": "@openzeppelin/contracts/utils/math/Math.sol:9",
        "version": {
          "withMetadata": "8708b4960073d2dcbb3faae444e4369392fd7f590ac2b440ca0bea43176a6e3a",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        }
      },
      "@openzeppelin/contracts/utils/structs/EnumerableSet.sol:EnumerableSet": {
        "src": "@openzeppelin/contracts/utils/structs/EnumerableSet.sol:38",
        "version": {
          "withMetadata": "c125d14211d838b012854b63105a733b5214b1e8f269dfa8bb1127b37a6c2f42",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        }
      },
      "@uniswap/v2-core/contracts/interfaces/IUniswapV2Pair.sol:IUniswapV2Pair": {
        "src": "@uniswap/v2-core/contracts/interfaces/IUniswapV2Pair.sol:3",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "DOMAIN_SEPARATOR()",
          "PERMIT_TYPEHASH()",
          "nonces(address)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "MINIMUM_LIQUIDITY()",
          "factory()",
          "token0()",
          "token1()",
          "getReserves()",
          "price0CumulativeLast()",
          "price1CumulativeLast()",
          "kLast()",
          "mint(address)",
          "burn(address)",
          "swap(uint256,uint256,address,bytes)",
          "skim(address)",
          "sync()",
          "initialize(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        }
      },
      "@uniswap/v2-periphery/contracts/interfaces/IWETH.sol:IWETH": {
        "src": "@uniswap/v2-periphery/contracts/interfaces/IWETH.sol:3",
        "inherit": [],
        "libraries": [],
        "methods": [
          "deposit()",
          "transfer(address,uint256)",
          "withdraw(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        }
      },
      "@uniswap/v2-periphery/contracts/libraries/UniswapV2Library.sol:UniswapV2Library": {
        "src": "@uniswap/v2-periphery/contracts/libraries/UniswapV2Library.sol:6",
        "version": {
          "withMetadata": "0722ff326bf003ef7c069514a5c803e1dab735ae7c4a98c4b3fdbbffeb5a1cc4",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        }
      },
      "@uniswap/v3-core/contracts/interfaces/IERC20Minimal.sol:IERC20Minimal": {
        "src": "@uniswap/v3-core/contracts/interfaces/IERC20Minimal.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        }
      },
      "@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol:IUniswapV3Pool": {
        "src": "@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol:15",
        "inherit": [
          "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol:IUniswapV3PoolEvents",
          "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol:IUniswapV3PoolOwnerActions",
          "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol:IUniswapV3PoolActions",
          "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol:IUniswapV3PoolDerivedState",
          "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol:IUniswapV3PoolState",
          "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol:IUniswapV3PoolImmutables"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        }
      },
      "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol:IUniswapV3PoolActions": {
        "src": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "initialize(uint160)",
          "mint(address,int24,int24,uint128,bytes)",
          "collect(address,int24,int24,uint128,uint128)",
          "burn(int24,int24,uint128)",
          "swap(address,bool,int256,uint160,bytes)",
          "flash(address,uint256,uint256,bytes)",
          "increaseObservationCardinalityNext(uint16)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        }
      },
      "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol:IUniswapV3PoolDerivedState": {
        "src": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "observe(uint32[])",
          "snapshotCumulativesInside(int24,int24)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        }
      },
      "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol:IUniswapV3PoolEvents": {
        "src": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        }
      },
      "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol:IUniswapV3PoolImmutables": {
        "src": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "factory()",
          "token0()",
          "token1()",
          "fee()",
          "tickSpacing()",
          "maxLiquidityPerTick()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        }
      },
      "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol:IUniswapV3PoolOwnerActions": {
        "src": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setFeeProtocol(uint8,uint8)",
          "collectProtocol(address,uint128,uint128)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        }
      },
      "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol:IUniswapV3PoolState": {
        "src": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "slot0()",
          "feeGrowthGlobal0X128()",
          "feeGrowthGlobal1X128()",
          "protocolFees()",
          "liquidity()",
          "ticks(int24)",
          "tickBitmap(int16)",
          "positions(bytes32)",
          "observations(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        }
      },
      "@uniswap/v3-core/contracts/libraries/TransferHelper.sol:TransferHelper": {
        "src": "@uniswap/v3-core/contracts/libraries/TransferHelper.sol:8",
        "version": {
          "withMetadata": "5a5432e901cb55bf29ac8a5580c43db43e85079775876defb174b7e21d124180",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        }
      },
      "contracts/DamnValuableNFT.sol:DamnValuableNFT": {
        "src": "contracts/DamnValuableNFT.sol:13",
        "version": {
          "withMetadata": "3e85dbb94f62df048d83f6c52a269c2092933c19b1093a3c0abe715766bfc2ca",
          "withoutMetadata": "c074aa150e2f9248f568f8307186172071aa176d6c31fe9b7f28266352fe4c86",
          "linkedWithoutMetadata": "c074aa150e2f9248f568f8307186172071aa176d6c31fe9b7f28266352fe4c86"
        },
        "inherit": [
          "solady/src/auth/OwnableRoles.sol:OwnableRoles",
          "solady/src/auth/Ownable.sol:Ownable",
          "@openzeppelin/contracts/token/ERC721/extensions/ERC721Burnable.sol:ERC721Burnable",
          "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
          "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:IERC721Metadata",
          "@openzeppelin/contracts/token/ERC721/IERC721.sol:IERC721",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "safeMint(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DamnValuableNFT",
            "src": "contracts/DamnValuableNFT.sol:17"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:39"
            },
            {
              "label": "tokenIdCounter",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "DamnValuableNFT",
              "src": "contracts/DamnValuableNFT.sol:15"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        }
      },
      "contracts/DamnValuableToken.sol:DamnValuableToken": {
        "src": "contracts/DamnValuableToken.sol:10",
        "version": {
          "withMetadata": "e6e71a5fd83c1797976e3d5704d5337bbe2175230f8d70291e039a02c66b1e12",
          "withoutMetadata": "78de81fd2dc45ad69794df2779391816969ca1767c191a510eb0e3d0dba5dfa3",
          "linkedWithoutMetadata": "78de81fd2dc45ad69794df2779391816969ca1767c191a510eb0e3d0dba5dfa3"
        },
        "inherit": [
          "solmate/src/tokens/ERC20.sol:ERC20"
        ],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DamnValuableToken",
            "src": "contracts/DamnValuableToken.sol:11"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:21"
            },
            {
              "label": "symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:23"
            },
            {
              "label": "totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:31"
            },
            {
              "label": "balanceOf",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:33"
            },
            {
              "label": "allowance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:35"
            },
            {
              "label": "nonces",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:45"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        }
      },
      "contracts/DamnValuableTokenSnapshot.sol:DamnValuableTokenSnapshot": {
        "src": "contracts/DamnValuableTokenSnapshot.sol:11",
        "version": {
          "withMetadata": "db14bdf42c78dc7e942731390b31456393a4893551369250e89711aa4dd6c0e5",
          "withoutMetadata": "94c34f3870068a5fed9ffc5eb8e65a2aeedcf03f3e79d392a46392f8280d0f8f",
          "linkedWithoutMetadata": "94c34f3870068a5fed9ffc5eb8e65a2aeedcf03f3e79d392a46392f8280d0f8f"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/extensions/ERC20Snapshot.sol:ERC20Snapshot",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(uint256)",
          "snapshot()",
          "getBalanceAtLastSnapshot(address)",
          "getTotalSupplyAtLastSnapshot()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DamnValuableTokenSnapshot",
            "src": "contracts/DamnValuableTokenSnapshot.sol:14"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "label": "_accountBalanceSnapshots",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_struct(Snapshots)5061_storage)",
              "contract": "ERC20Snapshot",
              "src": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Snapshot.sol:56"
            },
            {
              "label": "_totalSupplySnapshots",
              "offset": 0,
              "slot": "6",
              "type": "t_struct(Snapshots)5061_storage",
              "contract": "ERC20Snapshot",
              "src": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Snapshot.sol:57"
            },
            {
              "label": "_currentSnapshotId",
              "offset": 0,
              "slot": "8",
              "type": "t_struct(Counter)6857_storage",
              "contract": "ERC20Snapshot",
              "src": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Snapshot.sol:60"
            },
            {
              "label": "_lastSnapshotId",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "DamnValuableTokenSnapshot",
              "src": "contracts/DamnValuableTokenSnapshot.sol:12"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Snapshots)5061_storage)": {
              "label": "mapping(address => struct ERC20Snapshot.Snapshots)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Counter)6857_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Snapshots)5061_storage": {
              "label": "struct ERC20Snapshot.Snapshots",
              "members": [
                {
                  "label": "ids",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "values",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        }
      },
      "contracts/abi-smuggling/AuthorizedExecutor.sol:AuthorizedExecutor": {
        "src": "contracts/abi-smuggling/AuthorizedExecutor.sol:11",
        "inherit": [
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [
          "setPermissions(bytes32[])",
          "execute(address,bytes)",
          "getActionId(bytes4,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            },
            {
              "label": "initialized",
              "offset": 0,
              "slot": "1",
              "type": "t_bool",
              "contract": "AuthorizedExecutor",
              "src": "contracts/abi-smuggling/AuthorizedExecutor.sol:14"
            },
            {
              "label": "permissions",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_bytes32,t_bool)",
              "contract": "AuthorizedExecutor",
              "src": "contracts/abi-smuggling/AuthorizedExecutor.sol:17"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_bool)": {
              "label": "mapping(bytes32 => bool)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        }
      },
      "contracts/abi-smuggling/SelfAuthorizedVault.sol:SelfAuthorizedVault": {
        "src": "contracts/abi-smuggling/SelfAuthorizedVault.sol:12",
        "version": {
          "withMetadata": "2e1f4236192382614706f07381fca360bb47487c004dc4763f532a1aba9d49df",
          "withoutMetadata": "f2318384b2ecd5a7433f6f18332b585222a5b42bb54d6539c32a4814a0454eac",
          "linkedWithoutMetadata": "f2318384b2ecd5a7433f6f18332b585222a5b42bb54d6539c32a4814a0454eac"
        },
        "inherit": [
          "contracts/abi-smuggling/AuthorizedExecutor.sol:AuthorizedExecutor",
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard"
        ],
        "libraries": [
          "solady/src/utils/SafeTransferLib.sol:SafeTransferLib"
        ],
        "methods": [
          "withdraw(address,address,uint256)",
          "sweepFunds(address,address)",
          "getLastWithdrawalTimestamp()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "_lastWithdrawalTimestamp",
            "src": "contracts/abi-smuggling/SelfAuthorizedVault.sol:16"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            },
            {
              "label": "initialized",
              "offset": 0,
              "slot": "1",
              "type": "t_bool",
              "contract": "AuthorizedExecutor",
              "src": "contracts/abi-smuggling/AuthorizedExecutor.sol:14"
            },
            {
              "label": "permissions",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_bytes32,t_bool)",
              "contract": "AuthorizedExecutor",
              "src": "contracts/abi-smuggling/AuthorizedExecutor.sol:17"
            },
            {
              "label": "_lastWithdrawalTimestamp",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "SelfAuthorizedVault",
              "src": "contracts/abi-smuggling/SelfAuthorizedVault.sol:16"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_bool)": {
              "label": "mapping(bytes32 => bool)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        }
      },
      "contracts/backdoor/WalletRegistry.sol:WalletRegistry": {
        "src": "contracts/backdoor/WalletRegistry.sol:17",
        "version": {
          "withMetadata": "b85b53bcc5a9e0f8323ad7bb9509c55d7c723279436f51b04075946a62e09dec",
          "withoutMetadata": "116314d1cf422ddcd1da4f5cbf2e14170a872957a9bf9c5bd43c464249266126",
          "linkedWithoutMetadata": "116314d1cf422ddcd1da4f5cbf2e14170a872957a9bf9c5bd43c464249266126"
        },
        "inherit": [
          "solady/src/auth/Ownable.sol:Ownable",
          "@gnosis.pm/safe-contracts/contracts/proxies/IProxyCreationCallback.sol:IProxyCreationCallback"
        ],
        "libraries": [
          "solady/src/utils/SafeTransferLib.sol:SafeTransferLib"
        ],
        "methods": [
          "(address,address,address,address[])",
          "addBeneficiary(address)",
          "proxyCreated(address,address,bytes,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "WalletRegistry",
            "src": "contracts/backdoor/WalletRegistry.sol:40"
          },
          {
            "kind": "state-variable-immutable",
            "name": "masterCopy",
            "src": "contracts/backdoor/WalletRegistry.sol:22"
          },
          {
            "kind": "state-variable-immutable",
            "name": "walletFactory",
            "src": "contracts/backdoor/WalletRegistry.sol:23"
          },
          {
            "kind": "state-variable-immutable",
            "name": "token",
            "src": "contracts/backdoor/WalletRegistry.sol:24"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "beneficiaries",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "WalletRegistry",
              "src": "contracts/backdoor/WalletRegistry.sol:26"
            },
            {
              "label": "wallets",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_address)",
              "contract": "WalletRegistry",
              "src": "contracts/backdoor/WalletRegistry.sol:29"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        }
      },
      "contracts/backdoor/poc.sol:Helper": {
        "src": "contracts/backdoor/poc.sol:9",
        "version": {
          "withMetadata": "5376523bf6bc0a388e1473c3f217b529038a3af8ac15f62bf8c4d36a70391220",
          "withoutMetadata": "39a93b7b5eccad964e1fde2ac50110b62114a5c8dbbe7e656bdeac596142e848",
          "linkedWithoutMetadata": "39a93b7b5eccad964e1fde2ac50110b62114a5c8dbbe7e656bdeac596142e848"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "approve(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        }
      },
      "contracts/backdoor/poc.sol:Wallet_POC": {
        "src": "contracts/backdoor/poc.sol:15",
        "version": {
          "withMetadata": "11ff8dfc474755b7e24c3a2288235a45ef681aa60dc9920520be21b5ddc1e3eb",
          "withoutMetadata": "ad132c47319ec2d0eaff5f9b0f31f7b87837db6a1027c265a068630026f68def",
          "linkedWithoutMetadata": "ad132c47319ec2d0eaff5f9b0f31f7b87837db6a1027c265a068630026f68def"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address,address,address,address[])",
          "exploit()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Wallet_POC",
            "src": "contracts/backdoor/poc.sol:26"
          },
          {
            "kind": "state-variable-immutable",
            "name": "fac",
            "src": "contracts/backdoor/poc.sol:16"
          },
          {
            "kind": "state-variable-immutable",
            "name": "safe",
            "src": "contracts/backdoor/poc.sol:17"
          },
          {
            "kind": "state-variable-immutable",
            "name": "reg",
            "src": "contracts/backdoor/poc.sol:18"
          },
          {
            "kind": "state-variable-immutable",
            "name": "token",
            "src": "contracts/backdoor/poc.sol:19"
          },
          {
            "kind": "state-variable-immutable",
            "name": "helper",
            "src": "contracts/backdoor/poc.sol:21"
          },
          {
            "kind": "state-variable-immutable",
            "name": "player",
            "src": "contracts/backdoor/poc.sol:23"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "users",
              "offset": 0,
              "slot": "0",
              "type": "t_array(t_address)dyn_storage",
              "contract": "Wallet_POC",
              "src": "contracts/backdoor/poc.sol:24"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        }
      },
      "contracts/climber/ClimberTimelock.sol:ClimberTimelock": {
        "src": "contracts/climber/ClimberTimelock.sol:21",
        "version": {
          "withMetadata": "054db4ec5a4a2ac56efcf2e41fe3cbf13c1a6b6f83d970f428709f61c7c34b9c",
          "withoutMetadata": "22c50716512da2f691ef9dd8184fb4590e51b50fc11565f4ee77b403413bbadb",
          "linkedWithoutMetadata": "22c50716512da2f691ef9dd8184fb4590e51b50fc11565f4ee77b403413bbadb"
        },
        "inherit": [
          "contracts/climber/ClimberTimelockBase.sol:ClimberTimelockBase",
          "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [
          "(address,address)",
          "schedule(address[],uint256[],bytes[],bytes32)",
          "execute(address[],uint256[],bytes[],bytes32)",
          "updateDelay(uint64)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ClimberTimelock",
            "src": "contracts/climber/ClimberTimelock.sol:29"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_roles",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)3749_storage)",
              "contract": "AccessControl",
              "src": "@openzeppelin/contracts/access/AccessControl.sol:55"
            },
            {
              "label": "operations",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_bytes32,t_struct(Operation)10905_storage)",
              "contract": "ClimberTimelockBase",
              "src": "contracts/climber/ClimberTimelockBase.sol:27"
            },
            {
              "label": "delay",
              "offset": 0,
              "slot": "2",
              "type": "t_uint64",
              "contract": "ClimberTimelockBase",
              "src": "contracts/climber/ClimberTimelockBase.sol:29"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(Operation)10905_storage)": {
              "label": "mapping(bytes32 => struct ClimberTimelockBase.Operation)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)3749_storage)": {
              "label": "mapping(bytes32 => struct AccessControl.RoleData)",
              "numberOfBytes": "32"
            },
            "t_struct(Operation)10905_storage": {
              "label": "struct ClimberTimelockBase.Operation",
              "members": [
                {
                  "label": "readyAtTimestamp",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "known",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                },
                {
                  "label": "executed",
                  "type": "t_bool",
                  "offset": 9,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)3749_storage": {
              "label": "struct AccessControl.RoleData",
              "members": [
                {
                  "label": "members",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        }
      },
      "contracts/climber/ClimberTimelockBase.sol:ClimberTimelockBase": {
        "src": "contracts/climber/ClimberTimelockBase.sol:10",
        "inherit": [
          "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "getOperationState(bytes32)",
          "getOperationId(address[],uint256[],bytes[],bytes32)",
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_roles",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)3749_storage)",
              "contract": "AccessControl",
              "src": "@openzeppelin/contracts/access/AccessControl.sol:55"
            },
            {
              "label": "operations",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_bytes32,t_struct(Operation)10905_storage)",
              "contract": "ClimberTimelockBase",
              "src": "contracts/climber/ClimberTimelockBase.sol:27"
            },
            {
              "label": "delay",
              "offset": 0,
              "slot": "2",
              "type": "t_uint64",
              "contract": "ClimberTimelockBase",
              "src": "contracts/climber/ClimberTimelockBase.sol:29"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(Operation)10905_storage)": {
              "label": "mapping(bytes32 => struct ClimberTimelockBase.Operation)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)3749_storage)": {
              "label": "mapping(bytes32 => struct AccessControl.RoleData)",
              "numberOfBytes": "32"
            },
            "t_struct(Operation)10905_storage": {
              "label": "struct ClimberTimelockBase.Operation",
              "members": [
                {
                  "label": "readyAtTimestamp",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "known",
                  "type": "t_bool",
                  "offset": 8,
                  "slot": "0"
                },
                {
                  "label": "executed",
                  "type": "t_bool",
                  "offset": 9,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)3749_storage": {
              "label": "struct AccessControl.RoleData",
              "members": [
                {
                  "label": "members",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        }
      },
      "contracts/climber/ClimberVault.sol:ClimberVault": {
        "src": "contracts/climber/ClimberVault.sol:19",
        "version": {
          "withMetadata": "4405546fbc5bd1456300e7d72faeb83c91b838971af76d722a18d9e34cb647fc",
          "withoutMetadata": "5464eb85cc8d892d42052478761138b79df192f598e61e0b35c6f84fbef159a3",
          "linkedWithoutMetadata": "5464eb85cc8d892d42052478761138b79df192f598e61e0b35c6f84fbef159a3"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:ERC1967UpgradeUpgradeable",
          "@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol:IERC1822ProxiableUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [
          "solady/src/utils/SafeTransferLib.sol:SafeTransferLib"
        ],
        "methods": [
          "()",
          "initialize(address,address,address)",
          "withdraw(address,address,uint256)",
          "sweepFunds(address)",
          "getSweeper()",
          "getLastWithdrawalTimestamp()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "151",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            },
            {
              "label": "_lastWithdrawalTimestamp",
              "offset": 0,
              "slot": "201",
              "type": "t_uint256",
              "contract": "ClimberVault",
              "src": "contracts/climber/ClimberVault.sol:20"
            },
            {
              "label": "_sweeper",
              "offset": 0,
              "slot": "202",
              "type": "t_address",
              "contract": "ClimberVault",
              "src": "contracts/climber/ClimberVault.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        }
      },
      "contracts/climber/poc.sol:Climber_POC": {
        "src": "contracts/climber/poc.sol:17",
        "version": {
          "withMetadata": "21f7bff11a2f45d7857cebd6056ad840fd75d56117bb55615971120e7dbc5c6b",
          "withoutMetadata": "f454303032c31094c2e7774eb200275d048f8c6ead249fbabaaf32d5f7747be5",
          "linkedWithoutMetadata": "f454303032c31094c2e7774eb200275d048f8c6ead249fbabaaf32d5f7747be5"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address,address,address)",
          "exploit()",
          "scheduling()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Climber_POC",
            "src": "contracts/climber/poc.sol:28"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_targets",
            "src": "contracts/climber/poc.sol:24"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_values",
            "src": "contracts/climber/poc.sol:25"
          },
          {
            "kind": "state-variable-assignment",
            "name": "_data",
            "src": "contracts/climber/poc.sol:26"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "tm",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ClimberTimelock)10887",
              "contract": "Climber_POC",
              "src": "contracts/climber/poc.sol:18"
            },
            {
              "label": "vt",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(ClimberVault)11197",
              "contract": "Climber_POC",
              "src": "contracts/climber/poc.sol:19"
            },
            {
              "label": "px",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(UUPSUpgradeable)3384",
              "contract": "Climber_POC",
              "src": "contracts/climber/poc.sol:20"
            },
            {
              "label": "token",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "Climber_POC",
              "src": "contracts/climber/poc.sol:21"
            },
            {
              "label": "player",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "Climber_POC",
              "src": "contracts/climber/poc.sol:22"
            },
            {
              "label": "_targets",
              "offset": 0,
              "slot": "5",
              "type": "t_array(t_address)dyn_storage",
              "contract": "Climber_POC",
              "src": "contracts/climber/poc.sol:24"
            },
            {
              "label": "_values",
              "offset": 0,
              "slot": "6",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "Climber_POC",
              "src": "contracts/climber/poc.sol:25"
            },
            {
              "label": "_data",
              "offset": 0,
              "slot": "7",
              "type": "t_array(t_bytes_storage)dyn_storage",
              "contract": "Climber_POC",
              "src": "contracts/climber/poc.sol:26"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_array(t_bytes_storage)dyn_storage": {
              "label": "bytes[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bytes_storage": {
              "label": "bytes",
              "numberOfBytes": "32"
            },
            "t_contract(ClimberTimelock)10887": {
              "label": "contract ClimberTimelock",
              "numberOfBytes": "20"
            },
            "t_contract(ClimberVault)11197": {
              "label": "contract ClimberVault",
              "numberOfBytes": "20"
            },
            "t_contract(UUPSUpgradeable)3384": {
              "label": "contract UUPSUpgradeable",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        }
      },
      "contracts/climber/poc.sol:Helper": {
        "src": "contracts/climber/poc.sol:8",
        "version": {
          "withMetadata": "b0f9d2be25ccfac45e7c6e0938b44ecd263a1beb1f16c4fe6c66b6c88531c34f",
          "withoutMetadata": "bbdab0522cecc8980a6a9eb89ad7d9d1bcda2977211aeba98fa4589dac508a4e",
          "linkedWithoutMetadata": "bbdab0522cecc8980a6a9eb89ad7d9d1bcda2977211aeba98fa4589dac508a4e"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:ERC1967UpgradeUpgradeable",
          "@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol:IERC1822ProxiableUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "exploit2(address,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "151",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        }
      },
      "contracts/compromised/Exchange.sol:Exchange": {
        "src": "contracts/compromised/Exchange.sol:13",
        "version": {
          "withMetadata": "458514cc57e9ba2eaf41bd3c429142f74577f1dcc67f03e83d88b07ecd37af21",
          "withoutMetadata": "e546cb6ddcd5836bb9748b79e5a8101b16e86ed64d67e051f8b4e8bdffef8c71",
          "linkedWithoutMetadata": "e546cb6ddcd5836bb9748b79e5a8101b16e86ed64d67e051f8b4e8bdffef8c71"
        },
        "inherit": [
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [
          "(address)",
          "buyOne()",
          "sellOne(uint256)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Exchange",
            "src": "contracts/compromised/Exchange.sol:27"
          },
          {
            "kind": "state-variable-immutable",
            "name": "token",
            "src": "contracts/compromised/Exchange.sol:16"
          },
          {
            "kind": "state-variable-immutable",
            "name": "oracle",
            "src": "contracts/compromised/Exchange.sol:17"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        }
      },
      "contracts/compromised/TrustfulOracle.sol:TrustfulOracle": {
        "src": "contracts/compromised/TrustfulOracle.sol:13",
        "version": {
          "withMetadata": "f5152d5089898fd2aae555161cfa8fd0de4660e26c3c63ceea0580564f4ab1fb",
          "withoutMetadata": "48fea9c040abc744dbbd5627858061e16925140e19945063abbd9fe89ccac777",
          "linkedWithoutMetadata": "48fea9c040abc744dbbd5627858061e16925140e19945063abbd9fe89ccac777"
        },
        "inherit": [
          "@openzeppelin/contracts/access/AccessControlEnumerable.sol:AccessControlEnumerable",
          "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
          "@openzeppelin/contracts/utils/introspection/ERC165.sol:ERC165",
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/access/IAccessControlEnumerable.sol:IAccessControlEnumerable",
          "@openzeppelin/contracts/access/IAccessControl.sol:IAccessControl",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [
          "solady/src/utils/LibSort.sol:LibSort"
        ],
        "methods": [
          "(address[],bool)",
          "setupInitialPrices(address[],string[],uint256[])",
          "postPrice(string,uint256)",
          "getMedianPrice(string)",
          "getAllPricesForSymbol(string)",
          "getPriceBySource(string,address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TrustfulOracle",
            "src": "contracts/compromised/TrustfulOracle.sol:25"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_roles",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)3749_storage)",
              "contract": "AccessControl",
              "src": "@openzeppelin/contracts/access/AccessControl.sol:55"
            },
            {
              "label": "_roleMembers",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_bytes32,t_struct(AddressSet)8003_storage)",
              "contract": "AccessControlEnumerable",
              "src": "@openzeppelin/contracts/access/AccessControlEnumerable.sol:16"
            },
            {
              "label": "_pricesBySource",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_uint256))",
              "contract": "TrustfulOracle",
              "src": "contracts/compromised/TrustfulOracle.sol:19"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_uint256))": {
              "label": "mapping(address => mapping(string => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(AddressSet)8003_storage)": {
              "label": "mapping(bytes32 => struct EnumerableSet.AddressSet)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)3749_storage)": {
              "label": "mapping(bytes32 => struct AccessControl.RoleData)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_uint256)": {
              "label": "mapping(string => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)8003_storage": {
              "label": "struct EnumerableSet.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)7702_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(RoleData)3749_storage": {
              "label": "struct AccessControl.RoleData",
              "members": [
                {
                  "label": "members",
                  "type": "t_mapping(t_address,t_bool)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Set)7702_storage": {
              "label": "struct EnumerableSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        }
      },
      "contracts/compromised/TrustfulOracleInitializer.sol:TrustfulOracleInitializer": {
        "src": "contracts/compromised/TrustfulOracleInitializer.sol:10",
        "version": {
          "withMetadata": "48d6638d50901c4bb29ba312b8fc2721924cc3aecdc87ca6a1ca502982069496",
          "withoutMetadata": "2688b18cc57ea0fcccd85175a62a83388aac02d13b63e5f6558a14c09d3194cf",
          "linkedWithoutMetadata": "2688b18cc57ea0fcccd85175a62a83388aac02d13b63e5f6558a14c09d3194cf"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address[],string[],uint256[])"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TrustfulOracleInitializer",
            "src": "contracts/compromised/TrustfulOracleInitializer.sol:15"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "oracle",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(TrustfulOracle)12045",
              "contract": "TrustfulOracleInitializer",
              "src": "contracts/compromised/TrustfulOracleInitializer.sol:13"
            }
          ],
          "types": {
            "t_contract(TrustfulOracle)12045": {
              "label": "contract TrustfulOracle",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        }
      },
      "contracts/compromised/poc.sol:Comp_POC": {
        "src": "contracts/compromised/poc.sol:7",
        "version": {
          "withMetadata": "b6c841ce2bfb2003269f0ba95d6507da271548d1d5aa59bb25b5c795b67fd629",
          "withoutMetadata": "5738a6fc881b111d2e7afbf813c4d03698f6d2510ec0ce31676ebccd522851b3",
          "linkedWithoutMetadata": "5738a6fc881b111d2e7afbf813c4d03698f6d2510ec0ce31676ebccd522851b3"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address,address)",
          "get_price(string)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Comp_POC",
            "src": "contracts/compromised/poc.sol:12"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "oracle",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(TrustfulOracle)12045",
              "contract": "Comp_POC",
              "src": "contracts/compromised/poc.sol:8"
            },
            {
              "label": "exchange",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(Exchange)11700",
              "contract": "Comp_POC",
              "src": "contracts/compromised/poc.sol:9"
            },
            {
              "label": "token",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(DamnValuableNFT)9639",
              "contract": "Comp_POC",
              "src": "contracts/compromised/poc.sol:10"
            }
          ],
          "types": {
            "t_contract(DamnValuableNFT)9639": {
              "label": "contract DamnValuableNFT",
              "numberOfBytes": "20"
            },
            "t_contract(Exchange)11700": {
              "label": "contract Exchange",
              "numberOfBytes": "20"
            },
            "t_contract(TrustfulOracle)12045": {
              "label": "contract TrustfulOracle",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        }
      },
      "contracts/free-rider/FreeRiderNFTMarketplace.sol:FreeRiderNFTMarketplace": {
        "src": "contracts/free-rider/FreeRiderNFTMarketplace.sol:12",
        "version": {
          "withMetadata": "bd09b2293f7b537a3e55cee94f2cf7d3034cf6ccdfa9fd1eb6d31d391716d1e8",
          "withoutMetadata": "b2653bf4183ffa557908eb8bf3a731867ef6dd73a67a7e27b679562c9a3890e3",
          "linkedWithoutMetadata": "b2653bf4183ffa557908eb8bf3a731867ef6dd73a67a7e27b679562c9a3890e3"
        },
        "inherit": [
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [
          "(uint256)",
          "offerMany(uint256[],uint256[])",
          "buyMany(uint256[])",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "FreeRiderNFTMarketplace",
            "src": "contracts/free-rider/FreeRiderNFTMarketplace.sol:32"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            },
            {
              "label": "token",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(DamnValuableNFT)9639",
              "contract": "FreeRiderNFTMarketplace",
              "src": "contracts/free-rider/FreeRiderNFTMarketplace.sol:15"
            },
            {
              "label": "offersCount",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "FreeRiderNFTMarketplace",
              "src": "contracts/free-rider/FreeRiderNFTMarketplace.sol:16"
            },
            {
              "label": "offers",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "FreeRiderNFTMarketplace",
              "src": "contracts/free-rider/FreeRiderNFTMarketplace.sol:19"
            }
          ],
          "types": {
            "t_contract(DamnValuableNFT)9639": {
              "label": "contract DamnValuableNFT",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        }
      },
      "contracts/free-rider/FreeRiderRecovery.sol:FreeRiderRecovery": {
        "src": "contracts/free-rider/FreeRiderRecovery.sol:13",
        "version": {
          "withMetadata": "6a3f6e2948a1bdb49ffaa2c6912f9c5d0ddd19465cda425f0926239d100bf646",
          "withoutMetadata": "6a35cc984f424dc55871068a4da2631b0e70b6e720f26082d5f18b153f37a1f1",
          "linkedWithoutMetadata": "6a35cc984f424dc55871068a4da2631b0e70b6e720f26082d5f18b153f37a1f1"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol:IERC721Receiver",
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [
          "(address,address)",
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "FreeRiderRecovery",
            "src": "contracts/free-rider/FreeRiderRecovery.sol:27"
          },
          {
            "kind": "state-variable-immutable",
            "name": "beneficiary",
            "src": "contracts/free-rider/FreeRiderRecovery.sol:17"
          },
          {
            "kind": "state-variable-immutable",
            "name": "nft",
            "src": "contracts/free-rider/FreeRiderRecovery.sol:18"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            },
            {
              "label": "received",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "FreeRiderRecovery",
              "src": "contracts/free-rider/FreeRiderRecovery.sol:19"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        }
      },
      "contracts/free-rider/poc.sol:Free_POC": {
        "src": "contracts/free-rider/poc.sol:11",
        "version": {
          "withMetadata": "e0165f8fc6672a7bb17904fc25724ba18cbb19b6f092aee9413b55408aa47831",
          "withoutMetadata": "7ddc5b12f96b8add78d89a4f70bfa85f8835fdc90111cc961f83b19111875860",
          "linkedWithoutMetadata": "7ddc5b12f96b8add78d89a4f70bfa85f8835fdc90111cc961f83b19111875860"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address,address,address,address)",
          "exploit()",
          "uniswapV2Call(address,uint256,uint256,bytes)",
          "onERC721Received(address,address,uint256,bytes)",
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Free_POC",
            "src": "contracts/free-rider/poc.sol:23"
          },
          {
            "kind": "state-variable-assignment",
            "name": "price",
            "src": "contracts/free-rider/poc.sol:19"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "market",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(FreeRiderNFTMarketplace)12468",
              "contract": "Free_POC",
              "src": "contracts/free-rider/poc.sol:12"
            },
            {
              "label": "dev",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(FreeRiderRecovery)12628",
              "contract": "Free_POC",
              "src": "contracts/free-rider/poc.sol:13"
            },
            {
              "label": "token",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(DamnValuableNFT)9639",
              "contract": "Free_POC",
              "src": "contracts/free-rider/poc.sol:14"
            },
            {
              "label": "uni",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(IUniswapV2Pair)8532",
              "contract": "Free_POC",
              "src": "contracts/free-rider/poc.sol:15"
            },
            {
              "label": "weth",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(IWETH)8552",
              "contract": "Free_POC",
              "src": "contracts/free-rider/poc.sol:16"
            },
            {
              "label": "ids",
              "offset": 0,
              "slot": "5",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "Free_POC",
              "src": "contracts/free-rider/poc.sol:18"
            },
            {
              "label": "price",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "Free_POC",
              "src": "contracts/free-rider/poc.sol:19"
            },
            {
              "label": "player",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "Free_POC",
              "src": "contracts/free-rider/poc.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_contract(DamnValuableNFT)9639": {
              "label": "contract DamnValuableNFT",
              "numberOfBytes": "20"
            },
            "t_contract(FreeRiderNFTMarketplace)12468": {
              "label": "contract FreeRiderNFTMarketplace",
              "numberOfBytes": "20"
            },
            "t_contract(FreeRiderRecovery)12628": {
              "label": "contract FreeRiderRecovery",
              "numberOfBytes": "20"
            },
            "t_contract(IUniswapV2Pair)8532": {
              "label": "contract IUniswapV2Pair",
              "numberOfBytes": "20"
            },
            "t_contract(IWETH)8552": {
              "label": "contract IWETH",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        }
      },
      "contracts/naive-receiver/FlashLoanReceiver.sol:FlashLoanReceiver": {
        "src": "contracts/naive-receiver/FlashLoanReceiver.sol:13",
        "version": {
          "withMetadata": "e45bdc30ef87f025f8523ae5e71e4f6e28bcdf90463eed794be37acdfc3a9a68",
          "withoutMetadata": "b597bd3d8d0bc3f3656f400764af0a6919580cb4338c0d18a724332e611d1d28",
          "linkedWithoutMetadata": "b597bd3d8d0bc3f3656f400764af0a6919580cb4338c0d18a724332e611d1d28"
        },
        "inherit": [
          "@openzeppelin/contracts/interfaces/IERC3156FlashBorrower.sol:IERC3156FlashBorrower"
        ],
        "libraries": [
          "solady/src/utils/SafeTransferLib.sol:SafeTransferLib"
        ],
        "methods": [
          "(address)",
          "onFlashLoan(address,address,uint256,uint256,bytes)",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "FlashLoanReceiver",
            "src": "contracts/naive-receiver/FlashLoanReceiver.sol:20"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "pool",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "FlashLoanReceiver",
              "src": "contracts/naive-receiver/FlashLoanReceiver.sol:15"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        }
      },
      "contracts/naive-receiver/NaiveReceiverLenderPool.sol:NaiveReceiverLenderPool": {
        "src": "contracts/naive-receiver/NaiveReceiverLenderPool.sol:14",
        "version": {
          "withMetadata": "7c19afc91ec483d4e9fa06df804e45b139c933956a61f22f9a8c03c1aae216bc",
          "withoutMetadata": "7e2db52589a95ef0b5d3e2d3a94a2469f7be7212339a6d88aca4061c7d6fd035",
          "linkedWithoutMetadata": "7e2db52589a95ef0b5d3e2d3a94a2469f7be7212339a6d88aca4061c7d6fd035"
        },
        "inherit": [
          "@openzeppelin/contracts/interfaces/IERC3156FlashLender.sol:IERC3156FlashLender",
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard"
        ],
        "libraries": [
          "solady/src/utils/SafeTransferLib.sol:SafeTransferLib"
        ],
        "methods": [
          "maxFlashLoan(address)",
          "flashFee(address,uint256)",
          "flashLoan(address,address,uint256,bytes)",
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        }
      },
      "contracts/naive-receiver/poc.sol:Native_POC": {
        "src": "contracts/naive-receiver/poc.sol:7",
        "version": {
          "withMetadata": "1e3a0340a302411142277e9ab8ceb1adb0f3913dadc4fc8ed7aa112505321929",
          "withoutMetadata": "fa75197a7f1a86ad219faef0064d83dfc26720865f507d6cf43fa0748c9d42e6",
          "linkedWithoutMetadata": "fa75197a7f1a86ad219faef0064d83dfc26720865f507d6cf43fa0748c9d42e6"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "exploit(address payable,address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        }
      },
      "contracts/puppet-v2/PuppetV2Pool.sol:IERC20": {
        "src": "contracts/puppet-v2/PuppetV2Pool.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "balanceOf(address)",
          "approve(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        }
      },
      "contracts/puppet-v2/PuppetV2Pool.sol:PuppetV2Pool": {
        "src": "contracts/puppet-v2/PuppetV2Pool.sol:17",
        "version": {
          "withMetadata": "f6cbb2b5a0edd0eed4c90fb17730098f9286eb0bcb15098ada25ebd267ba8076",
          "withoutMetadata": "a98fb0fd26b10bce1c32cc7dab506e06c75008c8067a2fe93aefc0748047f71d",
          "linkedWithoutMetadata": "a98fb0fd26b10bce1c32cc7dab506e06c75008c8067a2fe93aefc0748047f71d"
        },
        "inherit": [],
        "libraries": [
          "@uniswap/v2-periphery/contracts/libraries/UniswapV2Library.sol:UniswapV2Library"
        ],
        "methods": [
          "(address,address,address,address)",
          "borrow(uint256)",
          "calculateDepositOfWETHRequired(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PuppetV2Pool",
            "src": "contracts/puppet-v2/PuppetV2Pool.sol:28"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_uniswapPair",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "PuppetV2Pool",
              "src": "contracts/puppet-v2/PuppetV2Pool.sol:19"
            },
            {
              "label": "_uniswapFactory",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "PuppetV2Pool",
              "src": "contracts/puppet-v2/PuppetV2Pool.sol:20"
            },
            {
              "label": "_token",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IERC20)13211",
              "contract": "PuppetV2Pool",
              "src": "contracts/puppet-v2/PuppetV2Pool.sol:21"
            },
            {
              "label": "_weth",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(IERC20)13211",
              "contract": "PuppetV2Pool",
              "src": "contracts/puppet-v2/PuppetV2Pool.sol:22"
            },
            {
              "label": "deposits",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "PuppetV2Pool",
              "src": "contracts/puppet-v2/PuppetV2Pool.sol:24"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20)13211": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        }
      },
      "contracts/puppet-v2/poc.sol:IUniswapV2Router01": {
        "src": "contracts/puppet-v2/poc.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        }
      },
      "contracts/puppet-v2/poc.sol:Puppetv2_POC": {
        "src": "contracts/puppet-v2/poc.sol:17",
        "version": {
          "withMetadata": "2a35439b78a1717d855f7c1f1938e5ae6c58b91987357a9d724a366d23cf5afb",
          "withoutMetadata": "3d7999a1b59cf5d9da1a9e9407c9276db5f88f616e9bbc4d340efc0ccbed3e54",
          "linkedWithoutMetadata": "3d7999a1b59cf5d9da1a9e9407c9276db5f88f616e9bbc4d340efc0ccbed3e54"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address,address,address)",
          "exploit()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Puppetv2_POC",
            "src": "contracts/puppet-v2/poc.sol:27"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "pool",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(PuppetV2Pool)13378",
              "contract": "Puppetv2_POC",
              "src": "contracts/puppet-v2/poc.sol:18"
            },
            {
              "label": "router",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IUniswapV2Router01)13400",
              "contract": "Puppetv2_POC",
              "src": "contracts/puppet-v2/poc.sol:19"
            },
            {
              "label": "token",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(DamnValuableToken)9665",
              "contract": "Puppetv2_POC",
              "src": "contracts/puppet-v2/poc.sol:20"
            },
            {
              "label": "weth",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(IERC20)13211",
              "contract": "Puppetv2_POC",
              "src": "contracts/puppet-v2/poc.sol:21"
            },
            {
              "label": "player",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "Puppetv2_POC",
              "src": "contracts/puppet-v2/poc.sol:23"
            },
            {
              "label": "path",
              "offset": 0,
              "slot": "5",
              "type": "t_array(t_address)dyn_storage",
              "contract": "Puppetv2_POC",
              "src": "contracts/puppet-v2/poc.sol:24"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_contract(DamnValuableToken)9665": {
              "label": "contract DamnValuableToken",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20)13211": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_contract(IUniswapV2Router01)13400": {
              "label": "contract IUniswapV2Router01",
              "numberOfBytes": "20"
            },
            "t_contract(PuppetV2Pool)13378": {
              "label": "contract PuppetV2Pool",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        }
      },
      "contracts/puppet/PuppetPool.sol:PuppetPool": {
        "src": "contracts/puppet/PuppetPool.sol:12",
        "version": {
          "withMetadata": "913a39698f6ff9d65b7ccffda531f8f7a9cfd0c8b14904c571c1112c6345c892",
          "withoutMetadata": "ed58594631d0927af341c21ee183a6c05751205ff4a11eea6d76030f1fd2da72",
          "linkedWithoutMetadata": "ed58594631d0927af341c21ee183a6c05751205ff4a11eea6d76030f1fd2da72"
        },
        "inherit": [
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [
          "(address,address)",
          "borrow(uint256,address)",
          "calculateDepositRequired(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PuppetPool",
            "src": "contracts/puppet/PuppetPool.sol:27"
          },
          {
            "kind": "state-variable-immutable",
            "name": "uniswapPair",
            "src": "contracts/puppet/PuppetPool.sol:17"
          },
          {
            "kind": "state-variable-immutable",
            "name": "token",
            "src": "contracts/puppet/PuppetPool.sol:18"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            },
            {
              "label": "deposits",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "PuppetPool",
              "src": "contracts/puppet/PuppetPool.sol:20"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        }
      },
      "contracts/puppet/poc.sol:IUniswapExchangeV1": {
        "src": "contracts/puppet/poc.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "tokenToEthTransferInput(uint256,uint256,uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        }
      },
      "contracts/puppet/poc.sol:Puppet_POC": {
        "src": "contracts/puppet/poc.sol:10",
        "version": {
          "withMetadata": "04041d2876a13366bb9efcc026d8117b8b3066df8d778c7e3064af49e7c48d17",
          "withoutMetadata": "222235532f0b8b86eeb6190dfb370851515057130695e91a0e5a712ecc346610",
          "linkedWithoutMetadata": "222235532f0b8b86eeb6190dfb370851515057130695e91a0e5a712ecc346610"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address,address)",
          "exploit()",
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Puppet_POC",
            "src": "contracts/puppet/poc.sol:17"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "pool",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(PuppetPool)13729",
              "contract": "Puppet_POC",
              "src": "contracts/puppet/poc.sol:11"
            },
            {
              "label": "token",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(DamnValuableToken)9665",
              "contract": "Puppet_POC",
              "src": "contracts/puppet/poc.sol:12"
            },
            {
              "label": "uni",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "Puppet_POC",
              "src": "contracts/puppet/poc.sol:14"
            },
            {
              "label": "player",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "Puppet_POC",
              "src": "contracts/puppet/poc.sol:15"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(DamnValuableToken)9665": {
              "label": "contract DamnValuableToken",
              "numberOfBytes": "20"
            },
            "t_contract(PuppetPool)13729": {
              "label": "contract PuppetPool",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        }
      },
      "contracts/selfie/ISimpleGovernance.sol:ISimpleGovernance": {
        "src": "contracts/selfie/ISimpleGovernance.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "queueAction(address,uint128,bytes)",
          "executeAction(uint256)",
          "getActionDelay()",
          "getGovernanceToken()",
          "getAction(uint256)",
          "getActionCounter()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        }
      },
      "contracts/selfie/SelfiePool.sol:SelfiePool": {
        "src": "contracts/selfie/SelfiePool.sol:14",
        "version": {
          "withMetadata": "298832ebf7fd36bf32bebd752c4db52b7c78f18cbc4e2a889d889f29c262236d",
          "withoutMetadata": "bbd19302755aded490c48ea90919a77f764117659420a90fc55c527bdf0f09a0",
          "linkedWithoutMetadata": "bbd19302755aded490c48ea90919a77f764117659420a90fc55c527bdf0f09a0"
        },
        "inherit": [
          "@openzeppelin/contracts/interfaces/IERC3156FlashLender.sol:IERC3156FlashLender",
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard"
        ],
        "libraries": [],
        "methods": [
          "(address,address)",
          "maxFlashLoan(address)",
          "flashFee(address,uint256)",
          "flashLoan(address,address,uint256,bytes)",
          "emergencyExit(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SelfiePool",
            "src": "contracts/selfie/SelfiePool.sol:33"
          },
          {
            "kind": "state-variable-immutable",
            "name": "token",
            "src": "contracts/selfie/SelfiePool.sol:16"
          },
          {
            "kind": "state-variable-immutable",
            "name": "governance",
            "src": "contracts/selfie/SelfiePool.sol:17"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        }
      },
      "contracts/selfie/SimpleGovernance.sol:SimpleGovernance": {
        "src": "contracts/selfie/SimpleGovernance.sol:11",
        "version": {
          "withMetadata": "357376096dc44981d616ceb8801547dc1e12b54737947276e3787fcfa55e99b8",
          "withoutMetadata": "82048fab24c9f9550b1c4a5740443c978c7daf763c21a66ebf4621c5b49e3655",
          "linkedWithoutMetadata": "82048fab24c9f9550b1c4a5740443c978c7daf763c21a66ebf4621c5b49e3655"
        },
        "inherit": [
          "contracts/selfie/ISimpleGovernance.sol:ISimpleGovernance"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "queueAction(address,uint128,bytes)",
          "executeAction(uint256)",
          "getActionDelay()",
          "getGovernanceToken()",
          "getAction(uint256)",
          "getActionCounter()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SimpleGovernance",
            "src": "contracts/selfie/SimpleGovernance.sol:18"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_governanceToken",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(DamnValuableTokenSnapshot)9728",
              "contract": "SimpleGovernance",
              "src": "contracts/selfie/SimpleGovernance.sol:14"
            },
            {
              "label": "_actionCounter",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "SimpleGovernance",
              "src": "contracts/selfie/SimpleGovernance.sol:15"
            },
            {
              "label": "_actions",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_struct(GovernanceAction)13900_storage)",
              "contract": "SimpleGovernance",
              "src": "contracts/selfie/SimpleGovernance.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bytes_storage": {
              "label": "bytes",
              "numberOfBytes": "32"
            },
            "t_contract(DamnValuableTokenSnapshot)9728": {
              "label": "contract DamnValuableTokenSnapshot",
              "numberOfBytes": "20"
            },
            "t_mapping(t_uint256,t_struct(GovernanceAction)13900_storage)": {
              "label": "mapping(uint256 => struct ISimpleGovernance.GovernanceAction)",
              "numberOfBytes": "32"
            },
            "t_struct(GovernanceAction)13900_storage": {
              "label": "struct ISimpleGovernance.GovernanceAction",
              "members": [
                {
                  "label": "value",
                  "type": "t_uint128",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "proposedAt",
                  "type": "t_uint64",
                  "offset": 16,
                  "slot": "0"
                },
                {
                  "label": "executedAt",
                  "type": "t_uint64",
                  "offset": 24,
                  "slot": "0"
                },
                {
                  "label": "target",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "data",
                  "type": "t_bytes_storage",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint128": {
              "label": "uint128",
              "numberOfBytes": "16"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        }
      },
      "contracts/selfie/poc.sol:SelfiePool_POC": {
        "src": "contracts/selfie/poc.sol:9",
        "version": {
          "withMetadata": "eade6626224c38f34e0708546318d82dedd538b8e8ccd7397514b4f728bb18af",
          "withoutMetadata": "1b0efdf4a22fdef5322e41cb1369b6e003c1704ec42432a27da0fd78963be86b",
          "linkedWithoutMetadata": "1b0efdf4a22fdef5322e41cb1369b6e003c1704ec42432a27da0fd78963be86b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address,address)",
          "exploit()",
          "execute()",
          "onFlashLoan(address,address,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SelfiePool_POC",
            "src": "contracts/selfie/poc.sol:18"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "pool",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(SelfiePool)14191",
              "contract": "SelfiePool_POC",
              "src": "contracts/selfie/poc.sol:10"
            },
            {
              "label": "gov",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(SimpleGovernance)14491",
              "contract": "SelfiePool_POC",
              "src": "contracts/selfie/poc.sol:11"
            },
            {
              "label": "token",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(DamnValuableTokenSnapshot)9728",
              "contract": "SelfiePool_POC",
              "src": "contracts/selfie/poc.sol:12"
            },
            {
              "label": "player",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "SelfiePool_POC",
              "src": "contracts/selfie/poc.sol:14"
            },
            {
              "label": "id",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "SelfiePool_POC",
              "src": "contracts/selfie/poc.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(DamnValuableTokenSnapshot)9728": {
              "label": "contract DamnValuableTokenSnapshot",
              "numberOfBytes": "20"
            },
            "t_contract(SelfiePool)14191": {
              "label": "contract SelfiePool",
              "numberOfBytes": "20"
            },
            "t_contract(SimpleGovernance)14491": {
              "label": "contract SimpleGovernance",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        }
      },
      "contracts/side-entrance/SideEntranceLenderPool.sol:IFlashLoanEtherReceiver": {
        "src": "contracts/side-entrance/SideEntranceLenderPool.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "execute()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        }
      },
      "contracts/side-entrance/SideEntranceLenderPool.sol:SideEntranceLenderPool": {
        "src": "contracts/side-entrance/SideEntranceLenderPool.sol:15",
        "version": {
          "withMetadata": "690a3dce8717c5466d2cc12dbf84fc128a79fd48619d5be624aca54534467e67",
          "withoutMetadata": "15548b6006e89d74f5c12bf3c4bdcabb069631699345b84b04f3dc2caac589a0",
          "linkedWithoutMetadata": "15548b6006e89d74f5c12bf3c4bdcabb069631699345b84b04f3dc2caac589a0"
        },
        "inherit": [],
        "libraries": [
          "solady/src/utils/SafeTransferLib.sol:SafeTransferLib"
        ],
        "methods": [
          "deposit()",
          "withdraw()",
          "flashLoan(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SideEntranceLenderPool",
              "src": "contracts/side-entrance/SideEntranceLenderPool.sol:16"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        }
      },
      "contracts/side-entrance/poc.sol:Side_POC": {
        "src": "contracts/side-entrance/poc.sol:6",
        "version": {
          "withMetadata": "7ce52cdc80846ccb4645f6c005cd666ce27c721f030477fd9d151e18d82a49c2",
          "withoutMetadata": "937ec2614ca5ec774ef0c638abecd344aa718aaecc521db9d7ad0cff4db314a1",
          "linkedWithoutMetadata": "937ec2614ca5ec774ef0c638abecd344aa718aaecc521db9d7ad0cff4db314a1"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address)",
          "exploit()",
          "execute()",
          "()",
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Side_POC",
            "src": "contracts/side-entrance/poc.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "target",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(SideEntranceLenderPool)14762",
              "contract": "Side_POC",
              "src": "contracts/side-entrance/poc.sol:7"
            },
            {
              "label": "player",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Side_POC",
              "src": "contracts/side-entrance/poc.sol:8"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(SideEntranceLenderPool)14762": {
              "label": "contract SideEntranceLenderPool",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        }
      },
      "contracts/the-rewarder/AccountingToken.sol:AccountingToken": {
        "src": "contracts/the-rewarder/AccountingToken.sol:14",
        "version": {
          "withMetadata": "dd9302d5117cd5c6f8c6f6cfd6f03bdd68a55f2f5909baade8c2fd8f3dabc2e0",
          "withoutMetadata": "8f48bc0e3ff3fb1019976ff7e09345c544ed2e84692393ffd7b08d8863d681db",
          "linkedWithoutMetadata": "8f48bc0e3ff3fb1019976ff7e09345c544ed2e84692393ffd7b08d8863d681db"
        },
        "inherit": [
          "solady/src/auth/OwnableRoles.sol:OwnableRoles",
          "solady/src/auth/Ownable.sol:Ownable",
          "@openzeppelin/contracts/token/ERC20/extensions/ERC20Snapshot.sol:ERC20Snapshot",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "mint(address,uint256)",
          "burn(address,uint256)",
          "snapshot()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "AccountingToken",
            "src": "contracts/the-rewarder/AccountingToken.sol:21"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "label": "_accountBalanceSnapshots",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_struct(Snapshots)5061_storage)",
              "contract": "ERC20Snapshot",
              "src": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Snapshot.sol:56"
            },
            {
              "label": "_totalSupplySnapshots",
              "offset": 0,
              "slot": "6",
              "type": "t_struct(Snapshots)5061_storage",
              "contract": "ERC20Snapshot",
              "src": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Snapshot.sol:57"
            },
            {
              "label": "_currentSnapshotId",
              "offset": 0,
              "slot": "8",
              "type": "t_struct(Counter)6857_storage",
              "contract": "ERC20Snapshot",
              "src": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Snapshot.sol:60"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(Snapshots)5061_storage)": {
              "label": "mapping(address => struct ERC20Snapshot.Snapshots)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Counter)6857_storage": {
              "label": "struct Counters.Counter",
              "members": [
                {
                  "label": "_value",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(Snapshots)5061_storage": {
              "label": "struct ERC20Snapshot.Snapshots",
              "members": [
                {
                  "label": "ids",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "values",
                  "type": "t_array(t_uint256)dyn_storage",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        }
      },
      "contracts/the-rewarder/FlashLoanerPool.sol:FlashLoanerPool": {
        "src": "contracts/the-rewarder/FlashLoanerPool.sol:14",
        "version": {
          "withMetadata": "b6cf364faffb67a9311293324ad13bbcf44dae88c7621e763d4aceab37fd622d",
          "withoutMetadata": "5a080ea82edf5897f193b2e457636bf7b19d73cd14d8a7c6ca402fedc7e9861e",
          "linkedWithoutMetadata": "5a080ea82edf5897f193b2e457636bf7b19d73cd14d8a7c6ca402fedc7e9861e"
        },
        "inherit": [
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [
          "(address)",
          "flashLoan(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "FlashLoanerPool",
            "src": "contracts/the-rewarder/FlashLoanerPool.sol:23"
          },
          {
            "kind": "state-variable-immutable",
            "name": "liquidityToken",
            "src": "contracts/the-rewarder/FlashLoanerPool.sol:17"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        }
      },
      "contracts/the-rewarder/RewardToken.sol:RewardToken": {
        "src": "contracts/the-rewarder/RewardToken.sol:12",
        "version": {
          "withMetadata": "5e9ef001191b02986ab7e2c2f9d3da443d2bfdd611b59f073913718998802325",
          "withoutMetadata": "e2d240c9c5a5b33510f38532a52a94b42e86d4ebb85eb222ee9fb2db1c867c0c",
          "linkedWithoutMetadata": "e2d240c9c5a5b33510f38532a52a94b42e86d4ebb85eb222ee9fb2db1c867c0c"
        },
        "inherit": [
          "solady/src/auth/OwnableRoles.sol:OwnableRoles",
          "solady/src/auth/Ownable.sol:Ownable",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "mint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "RewardToken",
            "src": "contracts/the-rewarder/RewardToken.sol:15"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        }
      },
      "contracts/the-rewarder/TheRewarderPool.sol:TheRewarderPool": {
        "src": "contracts/the-rewarder/TheRewarderPool.sol:13",
        "version": {
          "withMetadata": "09799ecbd0f49569e53085dafe22621de3646a822f36fe4a4951891592fd5f5f",
          "withoutMetadata": "f3c8d397d23f68fa7b01f215054182fd3c14d76683cd7134e47f25ebbc2c1660",
          "linkedWithoutMetadata": "f3c8d397d23f68fa7b01f215054182fd3c14d76683cd7134e47f25ebbc2c1660"
        },
        "inherit": [],
        "libraries": [
          "solady/src/utils/FixedPointMathLib.sol:FixedPointMathLib",
          "solady/src/utils/SafeTransferLib.sol:SafeTransferLib"
        ],
        "methods": [
          "(address)",
          "deposit(uint256)",
          "withdraw(uint256)",
          "distributeRewards()",
          "isNewRewardsRound()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TheRewarderPool",
            "src": "contracts/the-rewarder/TheRewarderPool.sol:38"
          },
          {
            "kind": "state-variable-immutable",
            "name": "liquidityToken",
            "src": "contracts/the-rewarder/TheRewarderPool.sol:22"
          },
          {
            "kind": "state-variable-immutable",
            "name": "accountingToken",
            "src": "contracts/the-rewarder/TheRewarderPool.sol:26"
          },
          {
            "kind": "state-variable-immutable",
            "name": "rewardToken",
            "src": "contracts/the-rewarder/TheRewarderPool.sol:29"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "lastSnapshotIdForRewards",
              "offset": 0,
              "slot": "0",
              "type": "t_uint128",
              "contract": "TheRewarderPool",
              "src": "contracts/the-rewarder/TheRewarderPool.sol:31"
            },
            {
              "label": "lastRecordedSnapshotTimestamp",
              "offset": 16,
              "slot": "0",
              "type": "t_uint64",
              "contract": "TheRewarderPool",
              "src": "contracts/the-rewarder/TheRewarderPool.sol:32"
            },
            {
              "label": "roundNumber",
              "offset": 24,
              "slot": "0",
              "type": "t_uint64",
              "contract": "TheRewarderPool",
              "src": "contracts/the-rewarder/TheRewarderPool.sol:33"
            },
            {
              "label": "lastRewardTimestamps",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_uint64)",
              "contract": "TheRewarderPool",
              "src": "contracts/the-rewarder/TheRewarderPool.sol:34"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_uint64)": {
              "label": "mapping(address => uint64)",
              "numberOfBytes": "32"
            },
            "t_uint128": {
              "label": "uint128",
              "numberOfBytes": "16"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        }
      },
      "contracts/the-rewarder/poc.sol:Reward_POC": {
        "src": "contracts/the-rewarder/poc.sol:8",
        "version": {
          "withMetadata": "5cba6cd6a9e8afa4719477cf33fefbc5de3c96a4314b63e7e4647525ea7324ad",
          "withoutMetadata": "7dae706b9befce44f878b0c43f86ccce3d8f74b76dac5e95ac309274f420956a",
          "linkedWithoutMetadata": "7dae706b9befce44f878b0c43f86ccce3d8f74b76dac5e95ac309274f420956a"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address,address,address)",
          "exploit()",
          "receiveFlashLoan(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Reward_POC",
            "src": "contracts/the-rewarder/poc.sol:15"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "reward_pool",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(TheRewarderPool)15388",
              "contract": "Reward_POC",
              "src": "contracts/the-rewarder/poc.sol:9"
            },
            {
              "label": "flashloan_pool",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(FlashLoanerPool)15075",
              "contract": "Reward_POC",
              "src": "contracts/the-rewarder/poc.sol:10"
            },
            {
              "label": "liquidly_token",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(DamnValuableToken)9665",
              "contract": "Reward_POC",
              "src": "contracts/the-rewarder/poc.sol:11"
            },
            {
              "label": "reward_token",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(RewardToken)15123",
              "contract": "Reward_POC",
              "src": "contracts/the-rewarder/poc.sol:12"
            },
            {
              "label": "player",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "Reward_POC",
              "src": "contracts/the-rewarder/poc.sol:13"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(DamnValuableToken)9665": {
              "label": "contract DamnValuableToken",
              "numberOfBytes": "20"
            },
            "t_contract(FlashLoanerPool)15075": {
              "label": "contract FlashLoanerPool",
              "numberOfBytes": "20"
            },
            "t_contract(RewardToken)15123": {
              "label": "contract RewardToken",
              "numberOfBytes": "20"
            },
            "t_contract(TheRewarderPool)15388": {
              "label": "contract TheRewarderPool",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        }
      },
      "contracts/truster/TrusterLenderPool.sol:TrusterLenderPool": {
        "src": "contracts/truster/TrusterLenderPool.sol:13",
        "version": {
          "withMetadata": "7b1150ff9b2f0df42af4255033cc2d8904a5ffc21ab5bf71786d202f6eec1391",
          "withoutMetadata": "4ccf7b3021f4fd7008d4c931587674fa75e2ad2ff368952c0fafdd79043b9d82",
          "linkedWithoutMetadata": "4ccf7b3021f4fd7008d4c931587674fa75e2ad2ff368952c0fafdd79043b9d82"
        },
        "inherit": [
          "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard"
        ],
        "libraries": [
          "@openzeppelin/contracts/utils/Address.sol:Address"
        ],
        "methods": [
          "(address)",
          "flashLoan(uint256,address,address,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TrusterLenderPool",
            "src": "contracts/truster/TrusterLenderPool.sol:20"
          },
          {
            "kind": "state-variable-immutable",
            "name": "token",
            "src": "contracts/truster/TrusterLenderPool.sol:16"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin/contracts/security/ReentrancyGuard.sol:37"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        }
      },
      "contracts/truster/poc.sol:Truster_POC": {
        "src": "contracts/truster/poc.sol:7",
        "version": {
          "withMetadata": "1942f079b013b58753f1fe93e60660a4c6faf2c247832407dcab6e7b626175e0",
          "withoutMetadata": "39e1b4a4470a4b1708efb7d79ea358ff621a3d8825f4f09e49cbea9735573444",
          "linkedWithoutMetadata": "39e1b4a4470a4b1708efb7d79ea358ff621a3d8825f4f09e49cbea9735573444"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "exploit(address,address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        }
      },
      "contracts/unstoppable/ReceiverUnstoppable.sol:ReceiverUnstoppable": {
        "src": "contracts/unstoppable/ReceiverUnstoppable.sol:12",
        "version": {
          "withMetadata": "01fa500f06a24f2b0740580854d3be6f386f174585dd8b33d80e29402c637bf0",
          "withoutMetadata": "a314e95cabc5d00000eca6575da729edead499639043e73a6758b8ba7b583148",
          "linkedWithoutMetadata": "a314e95cabc5d00000eca6575da729edead499639043e73a6758b8ba7b583148"
        },
        "inherit": [
          "@openzeppelin/contracts/interfaces/IERC3156FlashBorrower.sol:IERC3156FlashBorrower",
          "solmate/src/auth/Owned.sol:Owned"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "onFlashLoan(address,address,uint256,uint256,bytes)",
          "executeFlashLoan(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReceiverUnstoppable",
            "src": "contracts/unstoppable/ReceiverUnstoppable.sol:17"
          },
          {
            "kind": "state-variable-immutable",
            "name": "pool",
            "src": "contracts/unstoppable/ReceiverUnstoppable.sol:13"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Owned",
              "src": "solmate/src/auth/Owned.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        }
      },
      "contracts/unstoppable/UnstoppableVault.sol:UnstoppableVault": {
        "src": "contracts/unstoppable/UnstoppableVault.sol:14",
        "version": {
          "withMetadata": "8f5c639f30001bdc4cd23260978c54d8cf369d4accbc08a665e4cef55d98ab97",
          "withoutMetadata": "929faa6e5329cd43c38d6e12b76b7093c8acda3c73bcd35e74256e6b8b078d40",
          "linkedWithoutMetadata": "929faa6e5329cd43c38d6e12b76b7093c8acda3c73bcd35e74256e6b8b078d40"
        },
        "inherit": [
          "solmate/src/mixins/ERC4626.sol:ERC4626",
          "solmate/src/tokens/ERC20.sol:ERC20",
          "solmate/src/auth/Owned.sol:Owned",
          "solmate/src/utils/ReentrancyGuard.sol:ReentrancyGuard",
          "@openzeppelin/contracts/interfaces/IERC3156FlashLender.sol:IERC3156FlashLender"
        ],
        "libraries": [
          "solmate/src/utils/SafeTransferLib.sol:SafeTransferLib",
          "solmate/src/utils/FixedPointMathLib.sol:FixedPointMathLib"
        ],
        "methods": [
          "(address,address,address)",
          "maxFlashLoan(address)",
          "flashFee(address,uint256)",
          "setFeeRecipient(address)",
          "totalAssets()",
          "flashLoan(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UnstoppableVault",
            "src": "contracts/unstoppable/UnstoppableVault.sol:32"
          },
          {
            "kind": "state-variable-immutable",
            "name": "end",
            "src": "contracts/unstoppable/UnstoppableVault.sol:21"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "locked",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "solmate/src/utils/ReentrancyGuard.sol:8"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Owned",
              "src": "solmate/src/auth/Owned.sol:17"
            },
            {
              "label": "name",
              "offset": 0,
              "slot": "2",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:21"
            },
            {
              "label": "symbol",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:23"
            },
            {
              "label": "totalSupply",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:31"
            },
            {
              "label": "balanceOf",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:33"
            },
            {
              "label": "allowance",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:35"
            },
            {
              "label": "nonces",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:45"
            },
            {
              "label": "feeRecipient",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "UnstoppableVault",
              "src": "contracts/unstoppable/UnstoppableVault.sol:23"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        }
      },
      "contracts/wallet-mining/AuthorizerUpgradeable.sol:AuthorizerUpgradeable": {
        "src": "contracts/wallet-mining/AuthorizerUpgradeable.sol:12",
        "version": {
          "withMetadata": "4c33ef71de605d0528a4da6704098c04af6e0fcc49985e429f59955fe685facc",
          "withoutMetadata": "4e68eb14f62fc8af3b9f479402583178d27e9f31615273b8a5443dd2d74619b5",
          "linkedWithoutMetadata": "4e68eb14f62fc8af3b9f479402583178d27e9f31615273b8a5443dd2d74619b5"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:ERC1967UpgradeUpgradeable",
          "@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol:IERC1822ProxiableUpgradeable",
          "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:OwnableUpgradeable",
          "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:ContextUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "init(address[],address[])",
          "can(address,address)",
          "upgradeToAndCall(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ContextUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "51",
              "type": "t_address",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "52",
              "type": "t_array(t_uint256)49_storage",
              "contract": "OwnableUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "101",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "151",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            },
            {
              "label": "wards",
              "offset": 0,
              "slot": "201",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "AuthorizerUpgradeable",
              "src": "contracts/wallet-mining/AuthorizerUpgradeable.sol:13"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_uint256)49_storage": {
              "label": "uint256[49]",
              "numberOfBytes": "1568"
            },
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        }
      },
      "contracts/wallet-mining/WalletDeployer.sol:IGnosisSafeProxyFactory": {
        "src": "contracts/wallet-mining/WalletDeployer.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "createProxy(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        }
      },
      "contracts/wallet-mining/WalletDeployer.sol:WalletDeployer": {
        "src": "contracts/wallet-mining/WalletDeployer.sol:17",
        "version": {
          "withMetadata": "304c320b746d35024d5732a49c8b0a2446aad66f4671e978b721cb22f12ef649",
          "withoutMetadata": "2c783170f31b7b777548ab1e61b20f84422bf3a47121021218ed062e12db996e",
          "linkedWithoutMetadata": "2c783170f31b7b777548ab1e61b20f84422bf3a47121021218ed062e12db996e"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address)",
          "rule(address)",
          "drop(bytes)",
          "can(address,address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "WalletDeployer",
            "src": "contracts/wallet-mining/WalletDeployer.sol:30"
          },
          {
            "kind": "state-variable-immutable",
            "name": "chief",
            "src": "contracts/wallet-mining/WalletDeployer.sol:23"
          },
          {
            "kind": "state-variable-immutable",
            "name": "gem",
            "src": "contracts/wallet-mining/WalletDeployer.sol:24"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "mom",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "WalletDeployer",
              "src": "contracts/wallet-mining/WalletDeployer.sol:26"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        }
      },
      "contracts/wallet-mining/poc.sol:Walletmining_POC": {
        "src": "contracts/wallet-mining/poc.sol:8",
        "version": {
          "withMetadata": "23d205589209813eee6f1b651012f64323cc7df4ed5657c986041c08e8ad2a44",
          "withoutMetadata": "e197591b6d420933d93cfb9fc67484b7f55faf623d350dee79269b750e8c1cf5",
          "linkedWithoutMetadata": "e197591b6d420933d93cfb9fc67484b7f55faf623d350dee79269b750e8c1cf5"
        },
        "inherit": [
          "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:UUPSUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:ERC1967UpgradeUpgradeable",
          "@openzeppelin/contracts-upgradeable/interfaces/draft-IERC1822Upgradeable.sol:IERC1822ProxiableUpgradeable",
          "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:Initializable"
        ],
        "libraries": [],
        "methods": [
          "exploit(address,address)",
          "exploit2()",
          "drain(address,address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "selfdestruct",
            "src": "contracts/wallet-mining/poc.sol:15"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_initialized",
              "offset": 0,
              "slot": "0",
              "type": "t_uint8",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
              "retypedFrom": "bool"
            },
            {
              "label": "_initializing",
              "offset": 1,
              "slot": "0",
              "type": "t_bool",
              "contract": "Initializable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_uint256)50_storage",
              "contract": "ERC1967UpgradeUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
            },
            {
              "label": "__gap",
              "offset": 0,
              "slot": "51",
              "type": "t_array(t_uint256)50_storage",
              "contract": "UUPSUpgradeable",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
            }
          ],
          "types": {
            "t_array(t_uint256)50_storage": {
              "label": "uint256[50]",
              "numberOfBytes": "1600"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        }
      },
      "solady/src/auth/Ownable.sol:Ownable": {
        "src": "solady/src/auth/Ownable.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "transferOwnership(address)",
          "renounceOwnership()",
          "requestOwnershipHandover()",
          "cancelOwnershipHandover()",
          "completeOwnershipHandover(address)",
          "owner()",
          "ownershipHandoverExpiresAt(address)",
          "ownershipHandoverValidFor()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        }
      },
      "solady/src/auth/OwnableRoles.sol:OwnableRoles": {
        "src": "solady/src/auth/OwnableRoles.sol:11",
        "inherit": [
          "solady/src/auth/Ownable.sol:Ownable"
        ],
        "libraries": [],
        "methods": [
          "grantRoles(address,uint256)",
          "revokeRoles(address,uint256)",
          "renounceRoles(uint256)",
          "hasAnyRole(address,uint256)",
          "hasAllRoles(address,uint256)",
          "rolesOf(address)",
          "rolesFromOrdinals(uint8[])",
          "ordinalsFromRoles(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        }
      },
      "solady/src/utils/FixedPointMathLib.sol:FixedPointMathLib": {
        "src": "solady/src/utils/FixedPointMathLib.sol:7",
        "version": {
          "withMetadata": "5685eaf23596b4eb6da74c614825f1a0cf19888a414a457d25816052e29525b4",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        }
      },
      "solady/src/utils/LibSort.sol:LibSort": {
        "src": "solady/src/utils/LibSort.sol:6",
        "version": {
          "withMetadata": "aa8f4f2cabeb9fc9b4e4cbcdd1daf93b006eaa3a4a2423f6196a3f369e53d85c",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        }
      },
      "solady/src/utils/SafeTransferLib.sol:SafeTransferLib": {
        "src": "solady/src/utils/SafeTransferLib.sol:8",
        "version": {
          "withMetadata": "2348c5465c7df2529a76d9ffac5c56ae6fbdf5ae32682535766b86662f817843",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        }
      },
      "solmate/src/auth/Owned.sol:Owned": {
        "src": "solmate/src/auth/Owned.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setOwner(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Owned",
            "src": "solmate/src/auth/Owned.sol:29"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Owned",
              "src": "solmate/src/auth/Owned.sol:17"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        }
      },
      "solmate/src/mixins/ERC4626.sol:ERC4626": {
        "src": "solmate/src/mixins/ERC4626.sol:10",
        "inherit": [
          "solmate/src/tokens/ERC20.sol:ERC20"
        ],
        "libraries": [
          "solmate/src/utils/SafeTransferLib.sol:SafeTransferLib",
          "solmate/src/utils/FixedPointMathLib.sol:FixedPointMathLib"
        ],
        "methods": [
          "deposit(uint256,address)",
          "mint(uint256,address)",
          "withdraw(uint256,address,address)",
          "redeem(uint256,address,address)",
          "totalAssets()",
          "convertToShares(uint256)",
          "convertToAssets(uint256)",
          "previewDeposit(uint256)",
          "previewMint(uint256)",
          "previewWithdraw(uint256)",
          "previewRedeem(uint256)",
          "maxDeposit(address)",
          "maxMint(address)",
          "maxWithdraw(address)",
          "maxRedeem(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC4626",
            "src": "solmate/src/mixins/ERC4626.sol:34"
          },
          {
            "kind": "state-variable-immutable",
            "name": "asset",
            "src": "solmate/src/mixins/ERC4626.sol:32"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:21"
            },
            {
              "label": "symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:23"
            },
            {
              "label": "totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:31"
            },
            {
              "label": "balanceOf",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:33"
            },
            {
              "label": "allowance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:35"
            },
            {
              "label": "nonces",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:45"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        }
      },
      "solmate/src/tokens/ERC20.sol:ERC20": {
        "src": "solmate/src/tokens/ERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "DOMAIN_SEPARATOR()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "solmate/src/tokens/ERC20.sol:51"
          },
          {
            "kind": "state-variable-immutable",
            "name": "decimals",
            "src": "solmate/src/tokens/ERC20.sol:25"
          },
          {
            "kind": "state-variable-immutable",
            "name": "INITIAL_CHAIN_ID",
            "src": "solmate/src/tokens/ERC20.sol:41"
          },
          {
            "kind": "state-variable-immutable",
            "name": "INITIAL_DOMAIN_SEPARATOR",
            "src": "solmate/src/tokens/ERC20.sol:43"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:21"
            },
            {
              "label": "symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:23"
            },
            {
              "label": "totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:31"
            },
            {
              "label": "balanceOf",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:33"
            },
            {
              "label": "allowance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:35"
            },
            {
              "label": "nonces",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:45"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        }
      },
      "solmate/src/tokens/WETH.sol:WETH": {
        "src": "solmate/src/tokens/WETH.sol:11",
        "version": {
          "withMetadata": "1cf71080db7dcad38785d6aaeda9665c2fbfb2f4a5dcf66b04bfb1257bb1930d",
          "withoutMetadata": "cc022fd82176407a2acacc0cf526b5c8e0bd837bd1aaae897cd4f9c0e90ed79f",
          "linkedWithoutMetadata": "cc022fd82176407a2acacc0cf526b5c8e0bd837bd1aaae897cd4f9c0e90ed79f"
        },
        "inherit": [
          "solmate/src/tokens/ERC20.sol:ERC20"
        ],
        "libraries": [
          "solmate/src/utils/SafeTransferLib.sol:SafeTransferLib"
        ],
        "methods": [
          "deposit()",
          "withdraw(uint256)",
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:21"
            },
            {
              "label": "symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:23"
            },
            {
              "label": "totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:31"
            },
            {
              "label": "balanceOf",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:33"
            },
            {
              "label": "allowance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:35"
            },
            {
              "label": "nonces",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "solmate/src/tokens/ERC20.sol:45"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        }
      },
      "solmate/src/utils/FixedPointMathLib.sol:FixedPointMathLib": {
        "src": "solmate/src/utils/FixedPointMathLib.sol:7",
        "version": {
          "withMetadata": "b1d679ee3abc809dd44cb2bf24c6759d883a53ff3cd0843ddf80edceec390619",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        }
      },
      "solmate/src/utils/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "solmate/src/utils/ReentrancyGuard.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "locked",
            "src": "solmate/src/utils/ReentrancyGuard.sol:8"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "locked",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "solmate/src/utils/ReentrancyGuard.sol:8"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        }
      },
      "solmate/src/utils/SafeTransferLib.sol:SafeTransferLib": {
        "src": "solmate/src/utils/SafeTransferLib.sol:10",
        "version": {
          "withMetadata": "b86328ba394d85a95dff7bb2216feb7de2f654966cbe1daa662d3edca3b23ba3",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        }
      }
    },
    {
      "@uniswap/v3-core/contracts/interfaces/IERC20Minimal.sol:IERC20Minimal": {
        "src": "@uniswap/v3-core/contracts/interfaces/IERC20Minimal.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        }
      },
      "@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol:IUniswapV3Pool": {
        "src": "@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol:15",
        "inherit": [
          "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol:IUniswapV3PoolEvents",
          "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol:IUniswapV3PoolOwnerActions",
          "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol:IUniswapV3PoolActions",
          "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol:IUniswapV3PoolDerivedState",
          "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol:IUniswapV3PoolState",
          "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol:IUniswapV3PoolImmutables"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        }
      },
      "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol:IUniswapV3PoolActions": {
        "src": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "initialize(uint160)",
          "mint(address,int24,int24,uint128,bytes)",
          "collect(address,int24,int24,uint128,uint128)",
          "burn(int24,int24,uint128)",
          "swap(address,bool,int256,uint160,bytes)",
          "flash(address,uint256,uint256,bytes)",
          "increaseObservationCardinalityNext(uint16)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        }
      },
      "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol:IUniswapV3PoolDerivedState": {
        "src": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "observe(uint32[])",
          "snapshotCumulativesInside(int24,int24)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        }
      },
      "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol:IUniswapV3PoolEvents": {
        "src": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        }
      },
      "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol:IUniswapV3PoolImmutables": {
        "src": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "factory()",
          "token0()",
          "token1()",
          "fee()",
          "tickSpacing()",
          "maxLiquidityPerTick()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        }
      },
      "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol:IUniswapV3PoolOwnerActions": {
        "src": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setFeeProtocol(uint8,uint8)",
          "collectProtocol(address,uint128,uint128)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        }
      },
      "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol:IUniswapV3PoolState": {
        "src": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "slot0()",
          "feeGrowthGlobal0X128()",
          "feeGrowthGlobal1X128()",
          "protocolFees()",
          "liquidity()",
          "ticks(int24)",
          "tickBitmap(int16)",
          "positions(bytes32)",
          "observations(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        }
      },
      "@uniswap/v3-core/contracts/libraries/FullMath.sol:FullMath": {
        "src": "@uniswap/v3-core/contracts/libraries/FullMath.sol:7",
        "version": {
          "withMetadata": "cf2c4d4d3bea0b2e9ef49240613f3cb48d73dcd714b95b447441facc9fa72621",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        }
      },
      "@uniswap/v3-core/contracts/libraries/TickMath.sol:TickMath": {
        "src": "@uniswap/v3-core/contracts/libraries/TickMath.sol:7",
        "version": {
          "withMetadata": "e2ce058f5eb0ffc8e9823618f74bd13009d16afb69f48051ee868452d0b1b42b",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        }
      },
      "@uniswap/v3-core/contracts/libraries/TransferHelper.sol:TransferHelper": {
        "src": "@uniswap/v3-core/contracts/libraries/TransferHelper.sol:8",
        "version": {
          "withMetadata": "05d7ae5f8b7e957e62d88103b3429af299b19c71345bd7bb139f330d28672bdd",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        }
      },
      "@uniswap/v3-periphery/contracts/libraries/OracleLibrary.sol:OracleLibrary": {
        "src": "@uniswap/v3-periphery/contracts/libraries/OracleLibrary.sol:10",
        "version": {
          "withMetadata": "92e5c62062317d7d72978a4409d80341a03e453f3f748a17498ab2afb57a9093",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [
          "@uniswap/v3-core/contracts/libraries/TickMath.sol:TickMath",
          "@uniswap/v3-core/contracts/libraries/FullMath.sol:FullMath"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        }
      },
      "contracts/puppet-v3/PuppetV3Pool.sol:PuppetV3Pool": {
        "src": "contracts/puppet-v3/PuppetV3Pool.sol:14",
        "version": {
          "withMetadata": "77c81b3ba77c3e43c76399ef8a6a715013b192a49b4d2afaf5971084e79936cc",
          "withoutMetadata": "7f41d709fd2d64f937de627398ac22f010648d313d0bd98237cef5c246ecf774",
          "linkedWithoutMetadata": "7f41d709fd2d64f937de627398ac22f010648d313d0bd98237cef5c246ecf774"
        },
        "inherit": [],
        "libraries": [
          "@uniswap/v3-core/contracts/libraries/TransferHelper.sol:TransferHelper",
          "@uniswap/v3-periphery/contracts/libraries/OracleLibrary.sol:OracleLibrary"
        ],
        "methods": [
          "(address,address,address)",
          "borrow(uint256)",
          "calculateDepositOfWETHRequired(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PuppetV3Pool",
            "src": "contracts/puppet-v3/PuppetV3Pool.sol:26"
          },
          {
            "kind": "state-variable-immutable",
            "name": "weth",
            "src": "contracts/puppet-v3/PuppetV3Pool.sol:18"
          },
          {
            "kind": "state-variable-immutable",
            "name": "token",
            "src": "contracts/puppet-v3/PuppetV3Pool.sol:19"
          },
          {
            "kind": "state-variable-immutable",
            "name": "uniswapV3Pool",
            "src": "contracts/puppet-v3/PuppetV3Pool.sol:20"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "deposits",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "PuppetV3Pool",
              "src": "contracts/puppet-v3/PuppetV3Pool.sol:22"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        }
      }
    }
  ]
}